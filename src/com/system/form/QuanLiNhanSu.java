/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.system.form;

import com.system.DAO.ChucVuDAO;
import com.system.DAO.NhanSuDAO;
import com.system.component.Header;
import com.system.main.Main;
import com.system.model.code.ChucVu;
import com.system.model.code.NhanSu;
import com.system.utils.Auth;
import com.system.utils.DataContains;
import com.system.utils.FormatMoney;
import com.system.utils.MsgBox;
import com.system.utils.XDate;
import com.system.utils.XImage;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.Image;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JTable;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author HP
 */
public class QuanLiNhanSu extends javax.swing.JPanel {

    /// tạo đối tượng truy xuất đến DAO
    NhanSuDAO dao = new NhanSuDAO();
    ChucVuDAO daoCV = new ChucVuDAO();
    // tạo lại 1 cái defau mặc định
    DefaultTableModel tblModel;
    public static int row = -1; // biến để chứa index giử liệu khi gọi hoặc click vào.
    ArrayList<NhanSu> arr = new ArrayList<NhanSu>();

    Header header;

    public QuanLiNhanSu(Header header) {
        initComponents();
        this.header = header;
        init();
    }

    public void addEvent(String nameEvent, ActionListener event) {
        if (nameEvent.contains("thêm")) {
            btnThem.addActionListener(event);
        } else if (nameEvent.contains("xóa")) {
            btnXoa.addActionListener(event);
        } else {
            btnLamMoi.addActionListener(event);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgGender = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        myTabbedPane1 = new com.system.customSwing.Designed.MyTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnLamMoi = new com.system.customSwing.Designed.MyButton_01();
        btnThem = new com.system.customSwing.Designed.MyButton_01();
        btnSua = new com.system.customSwing.Designed.MyButton_01();
        btnXoa = new com.system.customSwing.Designed.MyButton_01();
        btnIn = new com.system.customSwing.Designed.MyButton_01();
        txtNgaySinh = new com.system.customSwing.Designed.MyCalendar();
        txtMaNhanVien = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        txtBacLuong = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        txtHovaTen = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        rdoNu = new com.system.customSwing.Designed.MyRadioButton();
        rdoNam = new com.system.customSwing.Designed.MyRadioButton();
        txtLuong = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        txtEmail = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        myButton_016 = new com.system.customSwing.Designed.MyButton_01();
        txtSDT = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        txtDiaChi = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        txtSearch = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        btnCong = new com.system.customSwing.Designed.MyButton_02();
        btnTru = new com.system.customSwing.Designed.MyButton_02();
        cboChucVu = new com.system.customSwing.Designed.MyComboBox();
        lblAvatarNhanSu = new javax.swing.JLabel();
        tblQuanLiNhanSu = new com.system.customSwing.Designed.MyTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        btnClearCV = new com.system.customSwing.Designed.MyButton_01();
        btnInsertCV = new com.system.customSwing.Designed.MyButton_01();
        btnEditCV = new com.system.customSwing.Designed.MyButton_01();
        btnDeleteCV = new com.system.customSwing.Designed.MyButton_01();
        myButton_011 = new com.system.customSwing.Designed.MyButton_01();
        txtMaChucVu = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        txtTenChucVu = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        txtLuongCoBan = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        btnTimKiemCV = new com.system.customSwing.Designed.MyButton_02();
        jLabel16 = new javax.swing.JLabel();
        txtSearchCV = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        tblChucVu = new com.system.customSwing.Designed.MyTable();

        setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        jLabel1.setText("QUẢN LÝ NHÂN SỰ");

        myTabbedPane1.setName(""); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Chức vụ: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Mã nhân viên:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Họ và tên:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Giới tính:");
        jLabel5.setName(""); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Lương");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Ngày sinh:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Địa chỉ:");
        jLabel8.setName(""); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Số điện thoại:");
        jLabel9.setName(""); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Email:");
        jLabel10.setName(""); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Bậc lương:");

        jPanel5.setOpaque(false);
        jPanel5.setLayout(new java.awt.GridLayout(1, 0, 40, 10));

        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-available-updates-70.png"))); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.setBorderColor(new java.awt.Color(51, 0, 51));
        btnLamMoi.setColorClick(new java.awt.Color(102, 102, 102));
        btnLamMoi.setColorOver(new java.awt.Color(204, 204, 204));
        btnLamMoi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLamMoi.setRadius(20);
        btnLamMoi.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLamMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLamMoiMouseClicked(evt);
            }
        });
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        jPanel5.add(btnLamMoi);

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-add-administrator-70.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorderColor(new java.awt.Color(51, 0, 51));
        btnThem.setColorClick(new java.awt.Color(102, 102, 102));
        btnThem.setColorOver(new java.awt.Color(204, 204, 204));
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThem.setRadius(20);
        btnThem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel5.add(btnThem);

        btnSua.setText("Sửa");
        btnSua.setBorderColor(new java.awt.Color(51, 0, 51));
        btnSua.setColorClick(new java.awt.Color(102, 102, 102));
        btnSua.setColorOver(new java.awt.Color(204, 204, 204));
        btnSua.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSua.setRadius(20);
        btnSua.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel5.add(btnSua);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-remove-administrator-70.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorderColor(new java.awt.Color(51, 0, 51));
        btnXoa.setColorClick(new java.awt.Color(102, 102, 102));
        btnXoa.setColorOver(new java.awt.Color(204, 204, 204));
        btnXoa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnXoa.setRadius(20);
        btnXoa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel5.add(btnXoa);

        btnIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-print-70.png"))); // NOI18N
        btnIn.setText("In danh sách");
        btnIn.setBorderColor(new java.awt.Color(51, 0, 51));
        btnIn.setColorClick(new java.awt.Color(102, 102, 102));
        btnIn.setColorOver(new java.awt.Color(204, 204, 204));
        btnIn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnIn.setRadius(20);
        btnIn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInActionPerformed(evt);
            }
        });
        jPanel5.add(btnIn);

        txtNgaySinh.setBackground(new java.awt.Color(255, 255, 255));

        txtMaNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNhanVienActionPerformed(evt);
            }
        });
        txtMaNhanVien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaNhanVienKeyReleased(evt);
            }
        });

        txtBacLuong.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBacLuong.setText("1");
        txtBacLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBacLuongActionPerformed(evt);
            }
        });
        txtBacLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBacLuongKeyReleased(evt);
            }
        });

        btgGender.add(rdoNu);
        rdoNu.setText("Nữ");

        btgGender.add(rdoNam);
        rdoNam.setText("Nam");

        txtLuong.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLuongActionPerformed(evt);
            }
        });
        txtLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLuongKeyReleased(evt);
            }
        });

        myButton_016.setText("Tìm kiếm");
        myButton_016.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myButton_016ActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnCong.setBackground(new java.awt.Color(204, 204, 204));
        btnCong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/cong.png"))); // NOI18N
        btnCong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCongActionPerformed(evt);
            }
        });

        btnTru.setBackground(new java.awt.Color(204, 204, 204));
        btnTru.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/tru.png"))); // NOI18N
        btnTru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTruActionPerformed(evt);
            }
        });

        cboChucVu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboChucVuItemStateChanged(evt);
            }
        });
        cboChucVu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cboChucVuKeyReleased(evt);
            }
        });

        lblAvatarNhanSu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAvatarNhanSu.setText("200 x 180");
        lblAvatarNhanSu.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblAvatarNhanSu.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        lblAvatarNhanSu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAvatarNhanSuMouseClicked(evt);
            }
        });

        tblQuanLiNhanSu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQuanLiNhanSuMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblQuanLiNhanSuMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(cboChucVu, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(20, 20, 20)
                                .addComponent(btnCong, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBacLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTru, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtMaNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                .addGap(5, 5, 5)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                .addGap(36, 36, 36))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHovaTen, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(rdoNam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoNu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(txtDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)))
                                .addGap(63, 63, 63))))
                    .addComponent(tblQuanLiNhanSu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblAvatarNhanSu, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(myButton_016, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE))
                        .addGap(53, 53, 53))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel6)
                        .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHovaTen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel11)
                    .addComponent(btnCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBacLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(rdoNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoNu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(myButton_016, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(lblAvatarNhanSu, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(tblQuanLiNhanSu, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        myTabbedPane1.addTab("Thông tin nhân viên", jPanel1);

        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 600));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Mã chức vụ:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Tên chức vụ:");

        jPanel7.setOpaque(false);
        jPanel7.setPreferredSize(new java.awt.Dimension(150, 109));
        jPanel7.setLayout(new java.awt.GridLayout(1, 0, 30, 0));

        btnClearCV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-available-updates-100(1)_1.png"))); // NOI18N
        btnClearCV.setBorderColor(new java.awt.Color(51, 51, 51));
        btnClearCV.setColorClick(new java.awt.Color(102, 102, 102));
        btnClearCV.setColorOver(new java.awt.Color(204, 204, 204));
        btnClearCV.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClearCV.setMaximumSize(new java.awt.Dimension(50, 50));
        btnClearCV.setMinimumSize(new java.awt.Dimension(150, 150));
        btnClearCV.setRadius(20);
        btnClearCV.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnClearCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCVActionPerformed(evt);
            }
        });
        jPanel7.add(btnClearCV);

        btnInsertCV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-add-64.png"))); // NOI18N
        btnInsertCV.setText("Thêm");
        btnInsertCV.setBorderColor(new java.awt.Color(51, 51, 51));
        btnInsertCV.setColorClick(new java.awt.Color(102, 102, 102));
        btnInsertCV.setColorOver(new java.awt.Color(204, 204, 204));
        btnInsertCV.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInsertCV.setMaximumSize(new java.awt.Dimension(50, 50));
        btnInsertCV.setMinimumSize(new java.awt.Dimension(150, 150));
        btnInsertCV.setRadius(20);
        btnInsertCV.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInsertCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertCVActionPerformed(evt);
            }
        });
        jPanel7.add(btnInsertCV);

        btnEditCV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-edit-64.png"))); // NOI18N
        btnEditCV.setText("Sửa");
        btnEditCV.setBorderColor(new java.awt.Color(51, 51, 51));
        btnEditCV.setColorClick(new java.awt.Color(102, 102, 102));
        btnEditCV.setColorOver(new java.awt.Color(204, 204, 204));
        btnEditCV.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditCV.setMaximumSize(new java.awt.Dimension(50, 50));
        btnEditCV.setMinimumSize(new java.awt.Dimension(150, 150));
        btnEditCV.setRadius(20);
        btnEditCV.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCVActionPerformed(evt);
            }
        });
        jPanel7.add(btnEditCV);

        btnDeleteCV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-remove-64.png"))); // NOI18N
        btnDeleteCV.setText("Xóa");
        btnDeleteCV.setBorderColor(new java.awt.Color(51, 51, 51));
        btnDeleteCV.setColorClick(new java.awt.Color(102, 102, 102));
        btnDeleteCV.setColorOver(new java.awt.Color(204, 204, 204));
        btnDeleteCV.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDeleteCV.setMaximumSize(new java.awt.Dimension(50, 50));
        btnDeleteCV.setMinimumSize(new java.awt.Dimension(150, 150));
        btnDeleteCV.setRadius(20);
        btnDeleteCV.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDeleteCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCVActionPerformed(evt);
            }
        });
        jPanel7.add(btnDeleteCV);

        myButton_011.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-save-64.png"))); // NOI18N
        myButton_011.setText("Lưu");
        myButton_011.setBorderColor(new java.awt.Color(51, 51, 51));
        myButton_011.setColorClick(new java.awt.Color(102, 102, 102));
        myButton_011.setColorOver(new java.awt.Color(204, 204, 204));
        myButton_011.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myButton_011.setMaximumSize(new java.awt.Dimension(50, 50));
        myButton_011.setMinimumSize(new java.awt.Dimension(150, 150));
        myButton_011.setRadius(20);
        myButton_011.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel7.add(myButton_011);

        txtMaChucVu.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMaChucVu.setMinimumSize(new java.awt.Dimension(10, 10));
        txtMaChucVu.setName(""); // NOI18N
        txtMaChucVu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaChucVuFocusLost(evt);
            }
        });
        txtMaChucVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaChucVuActionPerformed(evt);
            }
        });
        txtMaChucVu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaChucVuKeyReleased(evt);
            }
        });

        txtTenChucVu.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTenChucVu.setMinimumSize(new java.awt.Dimension(10, 10));
        txtTenChucVu.setName(""); // NOI18N

        txtLuongCoBan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLuongCoBan.setMinimumSize(new java.awt.Dimension(10, 10));
        txtLuongCoBan.setName(""); // NOI18N
        txtLuongCoBan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLuongCoBanKeyReleased(evt);
            }
        });

        btnTimKiemCV.setText("Tìm kiếm");
        btnTimKiemCV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemCVActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Lương cơ bản:");

        txtSearchCV.setMinimumSize(new java.awt.Dimension(10, 10));
        txtSearchCV.setName(""); // NOI18N
        txtSearchCV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchCVKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(txtSearchCV, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnTimKiemCV, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(txtMaChucVu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTenChucVu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(32, 32, 32)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtLuongCoBan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(40, 40, 40))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(85, 85, 85))
            .addComponent(tblChucVu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTimKiemCV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchCV, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel14)
                    .addComponent(txtMaChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txtTenChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(txtLuongCoBan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tblChucVu, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        myTabbedPane1.addTab("Cập nhật chức vụ", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(355, 355, 355)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(405, 405, 405))
            .addComponent(myTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1048, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(myTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLamMoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiMouseClicked

    }//GEN-LAST:event_btnLamMoiMouseClicked

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        this.clear();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            //            this.insert();
            //            this.clear();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            //            this.update();
            //            this.clear();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            //            this.delete();
            //            this.clear();
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println(e);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInActionPerformed
        if (MsgBox.confirm(this, "Bạn có muốn in danh sách nhân sự ?")) {
            this.printListNhanSu();
        }
    }//GEN-LAST:event_btnInActionPerformed

    private void txtMaNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNhanVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNhanVienActionPerformed

    private void txtMaNhanVienKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaNhanVienKeyReleased
        String maNhanSu = txtMaNhanVien.getText();
        NhanSu ns = dao.selectByID(maNhanSu);
        if (ns != null) {
            MsgBox.alert(this, "Mã nhân viên đã tồn tại ! Vui lòng nhập lại");
            txtMaNhanVien.requestFocus();
            txtMaNhanVien.setText("");
        } else if (maNhanSu.length() > 10) {
            MsgBox.alert(this, "Mã nhân viên vượt quá giới hạn !");
            txtMaNhanVien.setText(maNhanSu.substring(0, 10));
        }
    }//GEN-LAST:event_txtMaNhanVienKeyReleased

    private void txtBacLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBacLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBacLuongActionPerformed

    private void txtBacLuongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBacLuongKeyReleased
        try {
            //tạo biến lương lấy từ Class hamBien gọi đến chứa giá trị lương ban đầu.                    
            double luong = DataContains.luong;
            double bacLuong = Double.parseDouble(txtBacLuong.getText());
            // sét giá trị vào
            txtLuong.setText(FormatMoney.formatMoney(luong * bacLuong));
            double luong2 = (luong * bacLuong);
            // gán biến vào phần hamg biền chứa biến để lưu dữ liệu
            DataContains.luongDaTinh = (float) luong2;
        } catch (NumberFormatException e) {
            /// thay đổi thông báo khi sai

            // JOptionPane.showMessageDialog(this, "Bậc lương không thể nhỏ hơn 0");
            // set giá trị vào nếu giá trị 1 vào nếu nhập nhỏ hơn 0.
            txtBacLuong.setText("1");
        }
    }//GEN-LAST:event_txtBacLuongKeyReleased

    private void txtLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLuongActionPerformed

    private void myButton_016ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myButton_016ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_myButton_016ActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        this.Search();
        if (txtSearch.getText().equals("")) {
            this.fillTable();
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnCongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCongActionPerformed
        try {
            btnTru.setEnabled(true);
            //tạo biến lương lấy từ Class hamBien gọi đến chứa giá trị lương ban đầu.                    
            double luong = DataContains.luong;
            //tạo biến lưu trữ bậc lương để cộng vào vì chuổi ko thể cộng số
            double bacLuong = Float.parseFloat(txtBacLuong.getText());
            //bậc lương sẽ dc cộng dồn vào
            double bacLuongTang = bacLuong + 1;
            txtBacLuong.setText("" + bacLuongTang);
            // sét giá trị vào
            // và dùng formatter chuyển về dạng chuổi luôn
            txtLuong.setText(FormatMoney.formatMoney(luong * bacLuongTang));
            double luong2 = (luong * bacLuongTang);
            // gán biến vào phần hamg biền chứa biến để lưu dữ liệu
            DataContains.luongDaTinh = (float) luong2;
        } catch (NumberFormatException e) {
            /// thay đổi thông báo khi sai
            // txtLuong.setText("1.");
            JOptionPane.showMessageDialog(this, "Bậc lương không thể nhỏ hơn 0");
            // set giá trị vào nếu giá trị 1 vào nếu nhập nhỏ hơn 0.
            //txtBacLuong.setText("1.0");
        }
    }//GEN-LAST:event_btnCongActionPerformed

    private void btnTruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTruActionPerformed
        try {

            //tạo biến lương lấy từ Class hamBien gọi đến chứa giá trị lương ban đầu.                    
            double luong = DataContains.luong;
            //tạo biến lưu trữ bậc lương để cộng vào vì chuổi ko thể cộng số
            double bacLuong = Double.parseDouble(txtBacLuong.getText());
            //bậc lương sẽ dc cộng dồn vào
            double bacLuongTang = bacLuong - 1.0;
            if (bacLuongTang < 1.0) {
                btnTru.setEnabled(false);
                txtBacLuong.setText("1.0");
            } else {
                txtBacLuong.setText("" + bacLuongTang);
                // sét giá trị vào
                txtLuong.setText(FormatMoney.formatMoney(luong * bacLuongTang));
                double luong2 = (luong * bacLuongTang);
                // gán biến vào phần hamg biền chứa biến để lưu dữ liệu
                DataContains.luongDaTinh = (float) luong2;
            }

        } catch (NumberFormatException e) {
            /// thay đổi thông báo khi sai
            txtLuong.setText("1.");

            //JOptionPane.showMessageDialog(this, "Bậc lương không thể nhỏ hơn 0");
            // set giá trị vào nếu giá trị 1 vào nếu nhập nhỏ hơn 0.
            txtBacLuong.setText("1");
        }
    }//GEN-LAST:event_btnTruActionPerformed

    private void cboChucVuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboChucVuItemStateChanged
        this.chonChucVu();
    }//GEN-LAST:event_cboChucVuItemStateChanged

    private void cboChucVuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboChucVuKeyReleased
        this.chonChucVu();
    }//GEN-LAST:event_cboChucVuKeyReleased

    private void lblAvatarNhanSuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAvatarNhanSuMouseClicked
        this.ChooseImage();
    }//GEN-LAST:event_lblAvatarNhanSuMouseClicked

    private void tblQuanLiNhanSuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQuanLiNhanSuMouseClicked

    }//GEN-LAST:event_tblQuanLiNhanSuMouseClicked

    private void tblQuanLiNhanSuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQuanLiNhanSuMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblQuanLiNhanSuMousePressed

    private void btnClearCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCVActionPerformed
        this.clearCV();
    }//GEN-LAST:event_btnClearCVActionPerformed

    private void btnInsertCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertCVActionPerformed
        try {
            if (validationCV()) {
                this.insertCV();
                this.clearCV();
                // gọi lại hiện thị dữ liệu combobox cũ.
                this.fillComBoboxChucVu();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnInsertCVActionPerformed

    private void btnEditCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCVActionPerformed
        try {
            if (validationCV()) {
                if (Auth.isManager()) {
                    this.updateCV();
                    this.clearCV();
                    this.fillComBoboxChucVu();
                } else {
                    MsgBox.alert(this, "Bạn không có quyền cập nhật chức");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnEditCVActionPerformed

    private void btnDeleteCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCVActionPerformed
        try {
            if (validationCV()) {
                if (Auth.isManager()) {
                    this.deleteCV();
                    this.clearCV();
                } else {
                    MsgBox.alert(this, "Bạn không có quyền xóa thông tin chức vụ!");
                }
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Truy vấn dữ liệu xóa thông tin thất bại !");
        }
    }//GEN-LAST:event_btnDeleteCVActionPerformed

    private void txtMaChucVuFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaChucVuFocusLost
        String maCV = txtMaChucVu.getText();
        ChucVu cv = daoCV.selectByID(maCV);
        if (cv != null) {
            MsgBox.alert(this, "Mã chức đã tồn tại ! Vui lòng nhập lại");
            txtMaChucVu.requestFocus();
            txtMaChucVu.setText("");
        } else if (maCV.length() > 10) {
            MsgBox.alert(this, "Mã chức vụ vượt quá giới hạn !");
            txtMaChucVu.setText(maCV.substring(0, 10));
        }
    }//GEN-LAST:event_txtMaChucVuFocusLost

    private void txtMaChucVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaChucVuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaChucVuActionPerformed

    private void txtMaChucVuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaChucVuKeyReleased
        //        String maCV = txtMaChucVu.getText();
        //        ChucVu cv = daoCV.selectByID(maCV);
        //        if (cv != null) {
        //            MsgBox.alert(this, "Mã chức đã tồn tại ! Vui lòng nhập lại");
        //            txtMaChucVu.requestFocus();
        //            txtMaChucVu.setText("");
        //        } else if (maCV.length() > 10) {
        //            MsgBox.alert(this, "Mã chức vụ vượt quá giới hạn !");
        //            txtMaChucVu.setText(maCV.substring(0, 10));
        //        }
    }//GEN-LAST:event_txtMaChucVuKeyReleased

    private void txtLuongCoBanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLuongCoBanKeyReleased
        setTextMoney(txtLuongCoBan);
        txtLuongCoBan.setBackground(Color.white);
        if (txtLuongCoBan.getText().trim() != null) {
            txtLuongCoBan.setText(txtLuongCoBan.getText().trim().replace(" VNĐ", ""));
        }
    }//GEN-LAST:event_txtLuongCoBanKeyReleased

    private void btnTimKiemCVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemCVActionPerformed
        this.SearchCV();
        if (txtSearchCV.getText().equals("")) {
            this.fillTableCV();
        }
    }//GEN-LAST:event_btnTimKiemCVActionPerformed

    private void txtSearchCVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchCVKeyReleased
        if (txtSearchCV.getText().equals("")) {
            this.fillTableCV();
        }
        if (txtSearchCV.getText().matches("[a-zA-Z]+")) {
            this.SearchCV();
        } else {
            this.SearchCV();
        }
    }//GEN-LAST:event_txtSearchCVKeyReleased

    private void txtLuongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLuongKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLuongKeyReleased

    private void init() {
        // gọi dữ liệu combobox
        this.fillComBoboxChucVu();
        this.fillTable();
        this.fillTableCV();
        // sử kiện click chuột vào table
        clickTableQLNS();
        clickTableCV();
        //set trạng thái các nút
        this.setStatus(true);
        this.setStatusCV(true);
    }

    //
    // hàm đổ dữ liệu lên combox box
    public void fillComBoboxChucVu() {

        ChucVuDAO cvd = new ChucVuDAO();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboChucVu.getModel();
        model.removeAllElements();
        List<ChucVu> list = cvd.selectAll();
        for (ChucVu item : list) {
            model.addElement(item);
        }
        //tạo biến lương lấy từ Class hamBien gọi đến chứa giá trị lương ban đầu.                    
        double luong = DataContains.luong;
        //tạo biến lưu trữ bậc lương để cộng vào vì chuổi ko thể cộng số
        double bacLuong = Double.parseDouble(txtBacLuong.getText());
        double luong2 = (luong * bacLuong);
        // gán biến vào phần hamg biền chứa biến để lưu dữ liệu
        DataContains.luongDaTinh = (float) luong2;
    }

    // khi click chuột thì thông tin sẽ dc lấy và chạy lên combobox.
    private void fillCickChucVu() {
        ChucVu cv = new ChucVu();//       
        String maChucVu = tblQuanLiNhanSu.getValueAt(this.row, 1).toString();
        ChucVuDAO cvd = new ChucVuDAO();
        List<ChucVu> list = new ArrayList<>();
        for (int i = 0; i < cboChucVu.getModel().getSize(); i++) {
            ChucVu cv1 = (ChucVu) cboChucVu.getModel().getElementAt(i);
            if (cv1.getMaChucVu().contains(maChucVu)) {
                cboChucVu.setSelectedIndex(i);
            }
        }
    }

    // add tên các cột dữ liệu vào bảng quản lí nhân sự
    private void addColumn(DefaultTableModel model, String... nameColumn) {
        model.setColumnCount(0);
        for (int i = 0; i < nameColumn.length; i++) {
            model.addColumn(nameColumn[i]);
        }
    }

    // hàm để load dữ liệu lên table
    public void fillTable() {
        // SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");        
        try {
            // SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");
            List<NhanSu> list = dao.selectAll();// lưu cái cở sở dự liệu về ái list mà ở trong nhân viên            
            modelFillData(list);
        } catch (Exception e) {
            System.out.println("Lỗi truy vấn fill table");
            e.printStackTrace();
        }

    }

/// hàm lấy gia trị vào trong filltTABLE
    private void modelFillData(List<NhanSu> list) {
        tblModel = new DefaultTableModel();
        addColumn(tblModel, "Mã nhân viên", "Mã chức vụ", "Họ và tên", "Giới tính", "Số điện thoại", "Bậc lương", "Ngày sinh", "Email", "Địa chỉ", "Lương");
        for (NhanSu entity : list) {
            tblModel.addRow(new Object[]{
                entity.getMaNhanVien(), entity.getMaChucVu(), entity.getHoVaTen(), entity.getGioiTinh(), entity.getSoDienThoai(),
                entity.getBacLuong(), XDate.SimpleDateFormat(entity.getNgaySinh()), entity.getEmail(), entity.getDiaChi(), FormatMoney.formatMoney(entity.getLuong())//, entity.getImg()
            });
            arr.add(entity);
        }
        tblQuanLiNhanSu.getTbl().setModel(tblModel);
    }

    private void chonChucVu() {
        try {
            if (!cboChucVu.getSelectedItem().equals(null)) {
                ChucVu qlcv = (ChucVu) cboChucVu.getSelectedItem();
                // khi chọn lại chức vụ set bậc lương = 1;
                txtBacLuong.setText("1.0");
                double selectLuong = qlcv.getLuongCoBan();
                DataContains.luong = selectLuong;
                txtLuong.setText(FormatMoney.formatMoney(DataContains.luong));
                setIDAuto(qlcv.getMaChucVu(), tblQuanLiNhanSu.getTbl());
            }
        } catch (Exception e) {
            e.printStackTrace();

        }
    }

    //pương thức insert dữ liệu form
    public void insert() throws ParseException {

        try {
            if (validation()) {
                if (Auth.isManager()) {
                    if (lblAvatarNhanSu.getIcon() == null) {
                        // tạo lớp ImgageIcon để lấy đường dẫn của ảnh.
                        if (rdoNam.isSelected()) {
                            lblAvatarNhanSu.setIcon(XImage.readImgDefau("AnhNhanVien.png"));
                        }
                        if (rdoNu.isSelected()) {
                            lblAvatarNhanSu.setIcon(XImage.readImgDefau("AnhNhanVienNu.png"));
                        }
                        if (MsgBox.confirm(this, "Bạn muốn lưu thông tin với ảnh mặc định ?")) {
                            try {
                                // tạo đối tượng để gọi đến
                                NhanSu ns = new NhanSu();
                                NhanSu model = getForm(ns);
                                ns.setImg(null);
                                dao.insert(model);
                                this.fillTable();
                                this.clear();
                                MsgBox.alert(this, "Lưu thông tin thành công");
                            } catch (Exception ex) {
                                Logger.getLogger(QuanLiNhanSu.class
                                        .getName()).log(Level.SEVERE, null, ex);
                            }
                        } else {// mo hop thoai
                            this.ChooseImage();
                            if (MsgBox.confirm(this, "Bạn muốn có chắc chắn lưu thông tin mới")) {
                                try {
                                    // tạo đối tượng để gọi đến
                                    NhanSu ns = new NhanSu();
                                    NhanSu model = getForm(ns);
                                    dao.insert(model);
                                    this.fillTable();
                                    MsgBox.alert(this, "Lưu thông tin thành công");
                                    this.clear();

                                } catch (ParseException ex) {
                                    Logger.getLogger(QuanLiNhanSu.class
                                            .getName()).log(Level.SEVERE, null, ex);
                                }
                            } else {
                                this.clear();
                            }
                        }
                    } else {
                        if (MsgBox.confirm(this, "Bạn muốn có chắc chắn lưu thông tin mới")) {
                            try {
                                // tạo đối tượng để gọi đến
                                NhanSu ns = new NhanSu();
                                NhanSu model = getForm(ns);
                                dao.insert(model);
                                this.fillTable();
                                this.clear();

                            } catch (ParseException ex) {
                                Logger.getLogger(QuanLiNhanSu.class
                                        .getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                } else {
                    MsgBox.alert(this, "Bạn không có quyền thêm thông tin nhân viên");
                }

            }

        } catch (HeadlessException e) {
            MsgBox.alert(this, "Thêm mới thất bại!");
        }
    }
    //pương thức insert dữ liệu form chuc vuu

    private void insertCV() throws ParseException {

        try {
            if (validationCV()) {
                if (Auth.isManager()) {
                    ChucVu cv = new ChucVu();
                    ChucVu model = getFormCV(cv);
                    if (MsgBox.confirm(this, "Bạn có chắc chắn muốn thêm chức vụ mới ?")) {
                        daoCV.insert(model);
                        this.fillTableCV();
                        this.clearCV();
                        MsgBox.alert(this, "Thêm mới thành công!");
                        fillComBoboxChucVu();
                    }
                } else {
                    MsgBox.alert(this, "Bạn không có quyền thêm thông tin chức vụ !");
                }

            }
        } catch (HeadlessException e) {
            MsgBox.alert(this, "Thêm mới thất bại!");
        }

    }

    // ham lay du lieu len form
    public NhanSu getForm(NhanSu model) throws ParseException {
        model.setMaNhanVien(txtMaNhanVien.getText());
        ChucVu cv = (ChucVu) cboChucVu.getSelectedItem();
        model.setMaChucVu(cv.getMaChucVu());
        model.setHoVaTen(txtHovaTen.getText());
        if (rdoNam.isSelected()) {
            model.setGioiTinh("Nam");
        } else {
            model.setGioiTinh("Nữ");
        }
        model.setBacLuong(Float.parseFloat(txtBacLuong.getText()));
        // tạo biến lấy giữ liệu
        String ngaySinh = txtNgaySinh.getTxt().getText();
        Date date = new SimpleDateFormat("dd-MM-yyyy").parse(ngaySinh);
        model.setNgaySinh(date);
        model.setEmail(txtEmail.getText());
        model.setSoDienThoai(txtSDT.getText());
        int luong2 = txtLuong.getText().lastIndexOf("V");
        model.setLuong(DataContains.luongDaTinh);
        model.setDiaChi(txtDiaChi.getText());
        model.setImg(lblAvatarNhanSu.getToolTipText());
        return model;
    }
// hàm lấy dữ liệu getForm:

    public ChucVu getFormCV(ChucVu model) throws ParseException {
        model.setMaChucVu(txtMaChucVu.getText());
        model.setTenChucVu(txtTenChucVu.getText());
        String luongCV = txtLuongCoBan.getText().trim().replace(",", "");
        model.setLuongCoBan(Float.parseFloat(luongCV.replace("VNĐ", "")));
        return model;
    }

    // hàm để set giử liệu vào hoặc hiện thị lên form
    private void setForm(NhanSu model) throws ParseException {
        lblAvatarNhanSu.setIcon(null);
        this.fillCickChucVu();
        ChucVuDAO cvDao = new ChucVuDAO();
        txtMaNhanVien.setText(model.getMaNhanVien());
        txtHovaTen.setText(model.getHoVaTen());
        rdoNam.setSelected(model.getGioiTinh().equalsIgnoreCase("Nữ"));
        if (model.getGioiTinh().equalsIgnoreCase("Nam")) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtBacLuong.setText("" + model.getBacLuong());
        String date = new SimpleDateFormat("dd-MM-yyyy").format(model.getNgaySinh()); //dd-MM-yyyy       
        txtNgaySinh.getTxt().setText(date);
        txtEmail.setText(model.getEmail());
        txtSDT.setText(model.getSoDienThoai());
        txtDiaChi.setText(model.getDiaChi());
        txtLuong.setText(FormatMoney.formatMoney(model.getLuong()));
        if (model.getImg() != null) {
            lblAvatarNhanSu.setToolTipText(model.getImg());
            lblAvatarNhanSu.setIcon(XImage.read(model.getImg()));
            File file = new File("AnhNhanSu");
            DataContains.duongDan = file.getAbsoluteFile() + "\\" + model.getImg();
            if (model.getImg().equalsIgnoreCase("AnhNhanVien.png")) {
                lblAvatarNhanSu.setIcon(XImage.readImgDefau("AnhNhanVien.png"));
            } else if (model.getImg().equalsIgnoreCase("AnhNhanVienNu.png")) {
                lblAvatarNhanSu.setIcon(XImage.readImgDefau("AnhNhanVienNu.png"));
            }
        } else {
            if (lblAvatarNhanSu.getIcon() == null && model.getGioiTinh().equalsIgnoreCase("nam")) {
                File file = new File("AnhMacDinh");
                lblAvatarNhanSu.setIcon(XImage.readImgDefau("AnhNhanVien.png"));
                DataContains.duongDan = file.getAbsoluteFile() + "\\" + model.getImg();
            } else {
                File file = new File("AnhMacDinh");
                lblAvatarNhanSu.setIcon(XImage.readImgDefau("AnhNhanVienNu.png"));
                DataContains.duongDan = file.getAbsoluteFile() + "\\" + model.getImg();
            }

        }
    }

    //
    private void setFormCV(ChucVu model) throws ParseException {
        txtMaChucVu.setText(String.valueOf(model.getMaChucVu()));
        txtTenChucVu.setText(model.getTenChucVu());
        txtLuongCoBan.setText(FormatMoney.formatMoney(model.getLuongCoBan()));
    }

    // phước thức dùng để xóa code
    public void delete() {
        if (validation()) {
            if (Auth.isManager()) {
                // không cho xoa thoog tin chính bạn
                String maNV = txtMaNhanVien.getText();
                if (maNV.equalsIgnoreCase(Auth.maNhanVien)) {
                    MsgBox.alert(this, "Bạn không thể xóa thông tin chính bạn !");
                } else {
                    if (tblQuanLiNhanSu.getTbl().getSelectedRow() >= 0) {
                        NhanSu ns = new NhanSu();
                        String mans = (String) tblQuanLiNhanSu.getValueAt(this.row, 0);
                        if (MsgBox.confirm(this, "Bạn thực sự muốn xóa nhân viên ?")) {
                            try {
                                if (lblAvatarNhanSu.getToolTipText() == null) {
                                    dao.delete(mans);
                                    this.fillTable();
                                    this.clear();
                                    MsgBox.alert(this, "Xóa thành công!");
                                } else {//nếu ahr ko phải là ảnh mặc định
                                    if (MsgBox.confirm(this, "Bạn có muốn xóa ảnh nhân viên đã lưu trữ ?")) {
                                        try {
                                            dao.delete(mans);
                                            this.DeleteImage();
                                            this.fillTable();
                                            this.clear();
                                            MsgBox.alert(this, "Xóa thành công dữ liệu ảnh!");
                                        } catch (Exception e) {
                                            e.printStackTrace();
                                        }
                                    } else {// nếu không chọn xóa ảnh mặc định sẽ xóa ảnh thường                                        
                                        dao.delete(mans);
                                        this.fillTable();
                                        this.clear();
                                        MsgBox.alert(this, "Xóa thông tin nhân sự thành công!");
                                    }
                                }
                            } catch (Exception e) {
                                e.printStackTrace();
                            }

                        }
                    }
                }

            } else {
                MsgBox.alert(this, "Bạn không có quyền xóa thông tin nhân viên");
            }
        }

    }

    //phuong thức xóa chức vụ:
    private void deleteCV() {
        if (tblChucVu.getTbl().getSelectedRowCount() >= 0) {
            if (MsgBox.confirm(this, "Bạn thực sự muốn xóa thông tin chức vụ ?")) {
                String maCV = tblChucVu.getValueAt(this.row, 0).toString();
                ChucVu cv = new ChucVu();
                // lấy dữ liệu duyệt qua tìm kiếm
                List<NhanSu> ns = dao.selectAll();
                boolean check = false;// tạo biến nếu = false là ko có dữ liệu trùng nhau
                for (NhanSu n : ns) {
                    if (n.getMaChucVu().equals(maCV)) {
                        MsgBox.alert(this, "Mã chức vụ còn tồn tại");
                        check = true;
                        break;
                    }
                }
                if (!check) {
                    try {
                        daoCV.delete(maCV);
                        this.fillTableCV();
                        this.clearCV();
                        fillComBoboxChucVu();
                        MsgBox.alert(this, "Xóa thành công!");
                    } catch (Exception e) {
                        MsgBox.alert(this, "Vui lòng xóa các thông tin nhân viên");
                    }
                }
            }
        } else {
            MsgBox.alert(this, "Vui lòng thêm thông tin vào danh sách");
        }
    }

    // phương thức dùng để chỉnh sửa
    public void update(Main main) {
        try {
            if (validation()) {
                if (Auth.isManager()) {
                    NhanSu model = new NhanSu();
                    this.getForm(model);
                    if (MsgBox.confirm(this, "Bạn có chắc chắn muốn cập nhật thông tin?")) {
                        dao.update(model);
                        this.fillTable();
                        MsgBox.alert(this, "Cập nhật thành công!");
                        if (Auth.maNhanVien.equalsIgnoreCase(txtMaNhanVien.getText())) {
                            main.openLoading();
                        }
                    }
                } else {
                    MsgBox.alert(this, "Bạn không có quyền chỉnh sửa nhân viên");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

// update chức vụ
    private void updateCV() {

        try {
            if (tblChucVu.getTbl().getSelectedRowCount() >= 0) {
                if (validationCV()) {
                    ChucVu model = new ChucVu();
                    this.getFormCV(model);
                    if (MsgBox.confirm(this, "Bạn có chắc chắn muốn cập nhật thông tin?")) {
                        daoCV.update(model);
                        this.fillTableCV();
                        MsgBox.alert(this, "Cập nhật thành công!");
                    }
                }
            } else {
                MsgBox.alert(this, "Vui lòng thêm thông tin vào danh sách");
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Cập nhật thất bại!");
        }
    }

    // phương thức khi click chuột để lấy dữ liệu và chỉnh sủa nhé.
    private void edit(int row) {
        try {
            this.row = row;
            String maCV = (String) tblQuanLiNhanSu.getTbl().getValueAt(this.row, 0);
            NhanSu model = dao.selectByID(maCV);
            DataContains.maCV = maCV;
            if (model != null) {
                this.setForm(model);
                this.setStatus(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // edit thông tin của chức vụ:
    private void editCV(int row) {
        try {
            this.row = row;
            String macv = tblChucVu.getValueAt(this.row, 0).toString();
            ChucVu model = daoCV.selectByID(macv);
            if (model != null) {
                this.setFormCV(model);
                this.setStatusCV(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    // set trạng thái của các nút
    private void setStatus(boolean insertable) {
//        btnThem.setEnabled(!insertable);
        btnSua.setEnabled(!insertable);
        btnXoa.setEnabled(!insertable);
    }

    // set trạng thái của from các nút
    private void setStatusCV(boolean insertable) {
        btnEditCV.setEnabled(!insertable);
        btnDeleteCV.setEnabled(!insertable);
    }

    // hàm xóa sạch form
    public void clear() {
        txtMaNhanVien.setEditable(true);
        btnThem.setEnabled(true);
        btnSua.setEnabled(false);
        txtMaNhanVien.setText("");
        txtHovaTen.setText("");
        rdoNam.setSelected(true);
        txtEmail.setText("");
        txtBacLuong.setText("1");
        txtNgaySinh.getTxt().setText("24-11-2022");
        txtEmail.setText("");
        txtSDT.setText("");
        txtDiaChi.setText("");
        txtLuong.setText("");
        lblAvatarNhanSu.setText(null);
        cboChucVu.setSelectedIndex(0);
        this.chonChucVu();
        // chọn hình ảnh
        lblAvatarNhanSu.setIcon(null);
        setIDAuto("QL", tblQuanLiNhanSu.getTbl());
    }

    private void clearCV() {
        btnInsertCV.setEnabled(true);
        btnEditCV.setEnabled(false);
        txtMaChucVu.setText("");
        txtTenChucVu.setText("");
        txtLuongCoBan.setText("");
    }

    // hàm chọn ảnh trong file
    private void ChooseImage() {
        lblAvatarNhanSu.setIcon(null);
        JFileChooser fileChooser = new JFileChooser();// tạo đối tượng tử hộp thoại
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {// nếu hợp thoại hiện lên có chọn
            File file = fileChooser.getSelectedFile();// tạo file và lấy đường dẫn            
            XImage.save(file);// save file vao thư mục logo
            ImageIcon icon = XImage.read(file.getName());// đọc hình từ logo
            lblAvatarNhanSu.setIcon(icon);
            lblAvatarNhanSu.setToolTipText(file.getName());// giử tên.            

        }
    }

    // xóa ảnh xong thư mục ảnh AnhNhanSu
    private void DeleteImage() {
        File file = new File(DataContains.duongDan);
        if (file.delete()) {
            System.out.println("Xóa ảnh trong thư mục thành công");
        } else {
            System.out.println("Lỗi xóa trong thư mục");
        }
    }

    private boolean validation() {
        if (txtMaNhanVien.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin mã nhân viên");
            txtMaNhanVien.requestFocus();
            return false;
        } else if (txtHovaTen.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin họ và tên");
            txtHovaTen.requestFocus();
            return false;
        } else if (txtEmail.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin email");
            txtEmail.requestFocus();
            return false;
        } else if (txtSDT.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin số điện thoại");
            txtSDT.requestFocus();
            return false;
        } else if (txtDiaChi.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin địa chỉ");
            txtDiaChi.requestFocus();
            return false;
        } else {
            if (txtSDT.getText().matches("0[0-9]{9}") == false) {
                MsgBox.alert(this, "Vui lòng nhập thông tin số điện thoại đúng định dạng");
                txtSDT.requestFocus();
                return false;
            } else if (txtEmail.getText().matches("^[a-zA-Z][\\w-]+@([\\w]+\\.[\\w]+|[\\w]+\\.[\\w]{2,}\\.[\\w]{2,})$") == false) {
                MsgBox.alert(this, "Vui lòng nhập thông tin email đúng định dạng");
                txtEmail.requestFocus();
                return false;
            }
            return true;
        }
    }

    /// kiểm tra from có hợp lệ ko
    private boolean validationCV() {
        if (txtMaChucVu.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin mã chức vụ ?");
            txtMaChucVu.requestFocus();
            return false;
        } else if (txtTenChucVu.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin tên chức vụ ?");
            txtTenChucVu.requestFocus();
            return false;
        } else if (txtLuongCoBan.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin lương");
            txtLuong.requestFocus();
            return false;
        } else {
            String luongCV = FormatMoney.formatReplace(txtLuongCoBan.getText());
            String luongCoBan = FormatMoney.formatVND(luongCV);
            if (luongCoBan.matches("[a-zA-Z ]+") == true) {
                MsgBox.alert(this, "Vui lòng nhập lương đúng định dạng lương !");
                txtLuongCoBan.requestFocus();
                return false;
            } else if (Float.parseFloat(luongCoBan) <= 0) {
                MsgBox.alert(this, "Giá trị của lương nhập vào không hợp lệ !");
                txtLuongCoBan.requestFocus();
                return false;
            }
            return true;
        }
    }

    // search dữ liệu của hàm nhân sự 
    private void Search() {
        try {
            String keyword = txtSearch.getText();
            if (keyword.matches("[a-zA-Z]+")) {//; trường hợp tìm theo tên 
                List<NhanSu> list = dao.selectBykeywordName(keyword);
                modelFillData(list);
            } else {// trương hợp tìm theo số điện thoại
                List<NhanSu> list = dao.selectBykeywordPhone(keyword);
                modelFillData(list);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    // fill dữ liệu chức vụ

    private void SearchCV() {
        try {
            String keyword = FormatMoney.formatReplace(txtSearchCV.getText());
            if (keyword.matches("[a-zA-Z]+")) {//; trường hợp tìm theo tên 
                List<ChucVu> list = daoCV.selectBykeywordName(keyword);
                tblModel = new DefaultTableModel();
                addColumn(tblModel, "Mã chức vụ", "Tên chức vụ", "Lương cơ bảng");
                for (ChucVu entity : list) {
                    tblModel.addRow(new Object[]{
                        entity.getMaChucVu(), entity.getTenChucVu(), FormatMoney.formatMoney(entity.getLuongCoBan())
                    });
                }
                tblChucVu.getTbl().setModel(tblModel);
            } else {// trương hợp tìm theo số điện thoại
                List<ChucVu> list = daoCV.selectBykeywordPhone(keyword);
                tblModel = new DefaultTableModel();
                addColumn(tblModel, "Mã chức vụ", "Tên chức vụ", "Lương cơ bảng");
                for (ChucVu entity : list) {
                    tblModel.addRow(new Object[]{
                        entity.getMaChucVu(), entity.getTenChucVu(), FormatMoney.formatMoney(entity.getLuongCoBan())
                    });
                }
                tblChucVu.getTbl().setModel(tblModel);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void fillTableCV() {
        tblModel = new DefaultTableModel();
        addColumn(tblModel, "Mã chức vụ", "Tên chức vụ", "Lương cơ bản");
        try {
            List<ChucVu> list = daoCV.selectAll();// lưu cái cở sở dự liệu về ái list mà ở trong nhân viên            
            for (ChucVu entity : list) {
                tblModel.addRow(new Object[]{
                    entity.getMaChucVu(), entity.getTenChucVu(), FormatMoney.formatMoney(entity.getLuongCoBan())
                });
            }
            tblChucVu.getTbl().setModel(tblModel);
        } catch (Exception e) {
            e.printStackTrace();

        }
    }

    // set giá trị money
    public void setTextMoney(javax.swing.JTextField txt) {
        try {
            String so = txt.getText().trim().replace(",", "");
            if (Double.parseDouble(so) >= 1000000000) {
                so = new StringBuilder(so).insert(so.length() - 3, ",").insert(so.length() - 6, ",").insert(so.length() - 9, ",").toString();
                txt.setText(so);
            } else if (Double.parseDouble(so) >= 1000000) {
                so = new StringBuilder(so).insert(so.length() - 3, ",").insert(so.length() - 6, ",").toString();
                txt.setText(so);
            } else if (Double.parseDouble(so) >= 1000) {
                so = new StringBuilder(so).insert(so.length() - 3, ",").toString();
                txt.setText(so);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void addEvent(ActionListener event) {
        btnThem.addActionListener(event);
    }

    public void DeleteEvent(ActionListener event) {
        btnXoa.addActionListener(event);
    }

    public void UpdateEvent(ActionListener event) {
        // System.out.println("update");
        btnSua.addActionListener(event);
    }

    private void clickTableQLNS() {
        try {
            tblQuanLiNhanSu.getTbl().addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    btnSua.setEnabled(true);
                    btnXoa.setEnabled(true);
                    txtMaNhanVien.setEditable(false);
                    btnThem.setEnabled(false);
                    edit(tblQuanLiNhanSu.getTbl().getSelectedRow());
                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clickTableCV() {
        try {

            tblChucVu.getTbl().addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    btnSua.setEnabled(true);
                    btnXoa.setEnabled(true);
                    txtMaChucVu.setEditable(false);
                    editCV(tblChucVu.getTbl().getSelectedRow());
                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void setIDAuto(String name, JTable tbl) {
        List<Integer> listSo = new ArrayList<>();
        for (int i = 0; i < tbl.getRowCount(); i++) {
            if (tbl.getValueAt(i, 0) != null && tbl.getValueAt(i, 0).toString().contains(name)) {
                int so = Integer.parseInt(tbl.getValueAt(i, 0).toString().replace(name, "").trim());
                listSo.add(so);
            }
        }

        for (int i = 1; i < tbl.getRowCount(); i++) {
            if (listSo.contains(i) == false) {
                txtMaNhanVien.setText(name + "00" + i);
                if (i > 9) {
                    txtMaNhanVien.setText(name + "0" + i);
                }
                break;
            }
        }
    }

    private void printListNhanSu() {
        try {
            XSSFWorkbook wordkbook = new XSSFWorkbook();
            XSSFSheet sheet = wordkbook.createSheet("danhsach");
            XSSFRow row = null;
            Cell cell = null;
            row = sheet.createRow(2);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("DANH SÁCH NHÂN SỰ");

            row = sheet.createRow(3);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("STT");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Mã Nhân Viên");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Mã Chức Vụ");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Họ Và Tên");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Giới Tính");

            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("SDT");

            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("Bậc Lương");

            cell = row.createCell(7, CellType.STRING);
            cell.setCellValue("Ngày Sinh");

            cell = row.createCell(8, CellType.STRING);
            cell.setCellValue("Email");

            cell = row.createCell(9, CellType.STRING);
            cell.setCellValue("Địa Chỉ");

            cell = row.createCell(10, CellType.STRING);
            cell.setCellValue("Lương");

            cell = row.createCell(11, CellType.STRING);
            cell.setCellValue("Img");

            cell = row.createCell(12, CellType.STRING);
            cell.setCellValue("Tình Trạng");

            for (int i = 0; i < arr.size(); i++) {
                //Modelbook book =arr.get(i);
                row = sheet.createRow(4 + i);

                cell = row.createCell(0, CellType.NUMERIC);
                cell.setCellValue(i + 1);

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue(arr.get(i).getMaNhanVien());

                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue(arr.get(i).getMaChucVu());

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue(arr.get(i).getHoVaTen());

                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue(arr.get(i).getGioiTinh());

                cell = row.createCell(5, CellType.STRING);
                cell.setCellValue(arr.get(i).getSoDienThoai());

                cell = row.createCell(6, CellType.STRING);
                cell.setCellValue(arr.get(i).getBacLuong());

                cell = row.createCell(7, CellType.STRING);
                cell.setCellValue(arr.get(i).getNgaySinh());

                cell = row.createCell(8, CellType.STRING);
                cell.setCellValue(arr.get(i).getEmail());

                cell = row.createCell(9, CellType.STRING);
                cell.setCellValue(arr.get(i).getDiaChi());

                cell = row.createCell(10, CellType.STRING);
                cell.setCellValue(arr.get(i).getLuong());

                cell = row.createCell(11, CellType.STRING);
                cell.setCellValue(arr.get(i).getImg());

                cell = row.createCell(12, CellType.STRING);
                cell.setCellValue(arr.get(i).isTinhTrang() ? "Còn làm việc" : "Nghỉ làm việc");

            }

            File f = new File("");
            try {
                FileOutputStream fis = new FileOutputStream(f.getAbsolutePath() + "//danhsach.xlsx");
                wordkbook.write(fis);
                fis.close();
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();

            } catch (IOException ex) {
                ex.printStackTrace();
            }

            this.header.getLblThongBao().setText("In danh sách nhân sự thành công!!!");

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Loi mo file");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgGender;
    private com.system.customSwing.Designed.MyButton_01 btnClearCV;
    private com.system.customSwing.Designed.MyButton_02 btnCong;
    private com.system.customSwing.Designed.MyButton_01 btnDeleteCV;
    private com.system.customSwing.Designed.MyButton_01 btnEditCV;
    private com.system.customSwing.Designed.MyButton_01 btnIn;
    private com.system.customSwing.Designed.MyButton_01 btnInsertCV;
    private com.system.customSwing.Designed.MyButton_01 btnLamMoi;
    private com.system.customSwing.Designed.MyButton_01 btnSua;
    private com.system.customSwing.Designed.MyButton_01 btnThem;
    private com.system.customSwing.Designed.MyButton_02 btnTimKiemCV;
    private com.system.customSwing.Designed.MyButton_02 btnTru;
    private com.system.customSwing.Designed.MyButton_01 btnXoa;
    private com.system.customSwing.Designed.MyComboBox cboChucVu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel lblAvatarNhanSu;
    private com.system.customSwing.Designed.MyButton_01 myButton_011;
    private com.system.customSwing.Designed.MyButton_01 myButton_016;
    private com.system.customSwing.Designed.MyTabbedPane myTabbedPane1;
    private com.system.customSwing.Designed.MyRadioButton rdoNam;
    private com.system.customSwing.Designed.MyRadioButton rdoNu;
    private com.system.customSwing.Designed.MyTable tblChucVu;
    private com.system.customSwing.Designed.MyTable tblQuanLiNhanSu;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtBacLuong;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtDiaChi;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtEmail;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtHovaTen;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtLuong;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtLuongCoBan;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtMaChucVu;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtMaNhanVien;
    private com.system.customSwing.Designed.MyCalendar txtNgaySinh;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtSDT;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtSearch;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtSearchCV;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtTenChucVu;
    // End of variables declaration//GEN-END:variables
}
