/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.system.form;

import com.system.DAO.DoAnDAO;
import com.system.DAO.DoUongDAO;
import com.system.DAO.LoaiThucDonDAO;
import com.system.method.Format_Money;
import com.system.model.code.DoAn;
import com.system.model.code.DoUong;
import com.system.model.code.LoaiThucDon;
import com.system.utils.DataContains;

import com.system.utils.FormatMoney;
import com.system.utils.MsgBox;
import com.system.utils.XImage;
import java.awt.HeadlessException;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class QuanLyThucDon extends javax.swing.JPanel {

    DefaultTableModel model;

    List<Integer> listDA = new ArrayList<>();
    List<Integer> listDU = new ArrayList<>();

    LoaiThucDonDAO dao = new LoaiThucDonDAO();
    DoAn DA = new DoAn();
    DoUong DU = new DoUong();
    DoAnDAO daoDA = new DoAnDAO();
    DoUongDAO daoDU = new DoUongDAO();
    int ID = 1; // set stt cho bảng
    public static int row = -1;

    private MouseEvent me;

    public QuanLyThucDon() {
        initComponents();
        setOpaque(false);
        model = new DefaultTableModel();
        txtmaMonAn.setEnabled(false);
        init();

    }

    public void addMA() {
        txtmaMonAn.setEnabled(true);
        if (rdoThucAn.isSelected()) {
            try {
                this.insertDA();

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            try {
                this.insertDU();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public void updateMA() {
        if (rdoThucAn.isSelected()) {
            try {
                this.updateDA();

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            try {
                this.updateDU();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public void deleteMA() {
        if (rdoThucAn.isSelected()) {
            try {
                this.deleteDA();

            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            try {
                this.deleteDU();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTinhTrang = new javax.swing.ButtonGroup();
        btgLoaiMonAn = new javax.swing.ButtonGroup();
        tas = new com.system.customSwing.Designed.MyTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        myPanel1 = new com.system.customSwing.Designed.MyPanel();
        lblAnh = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        rdoThucAn = new com.system.customSwing.Designed.MyRadioButton();
        rdoDoUong = new com.system.customSwing.Designed.MyRadioButton();
        jLabel4 = new javax.swing.JLabel();
        cboLoaiMonAn = new com.system.customSwing.Designed.MyComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtTenMon = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        jLabel6 = new javax.swing.JLabel();
        txtgiaGoc = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        txtbanGia = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        rdoConBan = new com.system.customSwing.Designed.MyRadioButton();
        rdoNgungBan = new com.system.customSwing.Designed.MyRadioButton();
        jLabel9 = new javax.swing.JLabel();
        txtmaMonAn = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        jLabel11 = new javax.swing.JLabel();
        txtGhiChu = new com.system.customSwing.Designed.MyTextArea();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        btnADD = new com.system.customSwing.Designed.MyButton_01();
        btnLoad = new com.system.customSwing.Designed.MyButton_01();
        btnDelete = new com.system.customSwing.Designed.MyButton_01();
        btnUpdate = new com.system.customSwing.Designed.MyButton_01();
        jPanel11 = new javax.swing.JPanel();
        btnFrist = new com.system.customSwing.Designed.MyButton_01();
        btnPrve = new com.system.customSwing.Designed.MyButton_01();
        btnNext = new com.system.customSwing.Designed.MyButton_01();
        btnLast = new com.system.customSwing.Designed.MyButton_01();
        jPanel2 = new javax.swing.JPanel();
        txtSearch = new com.system.customSwing.TextField_01.TextFieldSuggestion();
        btnSearch = new com.system.customSwing.Designed.MyButton_02();
        tblDanhSachThucDon = new com.system.customSwing.Designed.MyTable();
        myPanelShadow1 = new com.system.customSwing.Designed.MyPanelShadow();
        jPanel3 = new javax.swing.JPanel();
        cboMonAn = new com.system.customSwing.Designed.MyComboBox();
        jPanel4 = new javax.swing.JPanel();
        cboDoAn = new com.system.customSwing.Designed.MyComboBox();

        jPanel1.setOpaque(false);

        jPanel5.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel1.setText("Hình ảnh:");

        myPanel1.setColorBackgound(new java.awt.Color(255, 255, 255));
        myPanel1.setRoundBottomLeft(20);
        myPanel1.setRoundBottomRight(20);
        myPanel1.setRoundTopLeft(20);
        myPanel1.setRoundTopRight(20);

        lblAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnh.setText("340 x 340");
        lblAnh.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnhMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout myPanel1Layout = new javax.swing.GroupLayout(myPanel1);
        myPanel1.setLayout(myPanel1Layout);
        myPanel1Layout.setHorizontalGroup(
            myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );
        myPanel1Layout.setVerticalGroup(
            myPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(myPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(myPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setOpaque(false);

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel3.setText(" Loại món ăn:");

        jPanel7.setOpaque(false);

        btgLoaiMonAn.add(rdoThucAn);
        rdoThucAn.setText("Thức ăn");
        rdoThucAn.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        rdoThucAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoThucAnActionPerformed(evt);
            }
        });

        btgLoaiMonAn.add(rdoDoUong);
        rdoDoUong.setText("Đồ uống");
        rdoDoUong.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        rdoDoUong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDoUongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdoThucAn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(rdoDoUong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoThucAn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoDoUong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel4.setText(" Loại món ăn:");

        cboLoaiMonAn.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Món khai vị", "Món chính", "Món tráng miệng" }));
        cboLoaiMonAn.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        cboLoaiMonAn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLoaiMonAnItemStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel5.setText("Tên món ăn:");

        txtTenMon.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel6.setText("Giá gốc:");

        txtgiaGoc.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        txtgiaGoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtgiaGocMouseClicked(evt);
            }
        });

        txtbanGia.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        txtbanGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtbanGiaMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel7.setText("Giá bán:");

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel8.setText("Tình trạng");

        jPanel8.setOpaque(false);

        btgTinhTrang.add(rdoConBan);
        rdoConBan.setText("Còn bán");
        rdoConBan.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N

        btgTinhTrang.add(rdoNgungBan);
        rdoNgungBan.setText("Ngừng bán");
        rdoNgungBan.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdoConBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(rdoNgungBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoConBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdoNgungBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel9.setText("Mã món ăn:");

        txtmaMonAn.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel11.setText("Ghi chú:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmaMonAn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtgiaGoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenMon, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                            .addComponent(txtbanGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(138, 138, 138)))
                        .addContainerGap())
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboLoaiMonAn, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(149, 149, 149))))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboLoaiMonAn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtmaMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtbanGia, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtgiaGoc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenMon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );

        jPanel9.setOpaque(false);

        jPanel10.setBackground(new java.awt.Color(153, 255, 255));
        jPanel10.setOpaque(false);
        jPanel10.setLayout(new java.awt.GridLayout(1, 0, 20, 0));

        btnADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-add-administrator-70.png"))); // NOI18N
        btnADD.setRadius(20);
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });
        jPanel10.add(btnADD);

        btnLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-available-updates-70.png"))); // NOI18N
        btnLoad.setRadius(20);
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });
        jPanel10.add(btnLoad);

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-remove-64.png"))); // NOI18N
        btnDelete.setRadius(20);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel10.add(btnDelete);

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/system/icon/icons8-edit-64.png"))); // NOI18N
        btnUpdate.setRadius(20);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel10.add(btnUpdate);

        jPanel11.setBackground(new java.awt.Color(153, 255, 255));
        jPanel11.setOpaque(false);
        jPanel11.setLayout(new java.awt.GridLayout(1, 0, 20, 0));

        btnFrist.setText("|<");
        btnFrist.setRadius(20);
        btnFrist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFristActionPerformed(evt);
            }
        });
        jPanel11.add(btnFrist);

        btnPrve.setText("<<");
        btnPrve.setRadius(20);
        btnPrve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrveActionPerformed(evt);
            }
        });
        jPanel11.add(btnPrve);

        btnNext.setText(">>");
        btnNext.setRadius(20);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        jPanel11.add(btnNext);

        btnLast.setText(">|");
        btnLast.setRadius(20);
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        jPanel11.add(btnLast);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tas.addTab("CẬP NHẬT", jPanel1);

        jPanel2.setOpaque(false);

        txtSearch.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblDanhSachThucDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachThucDonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addGap(662, 662, 662))
            .addComponent(tblDanhSachThucDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(tblDanhSachThucDon, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE))
        );

        tas.addTab("  DANH SÁCH", jPanel2);

        myPanelShadow1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Loại món ăn", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 16), new java.awt.Color(102, 102, 255))); // NOI18N
        jPanel3.setOpaque(false);

        cboMonAn.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        cboMonAn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cboMonAn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMonAnItemStateChanged(evt);
            }
        });
        cboMonAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMonAnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(cboMonAn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cboMonAn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Loại đồ ăn", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("SansSerif", 1, 16), new java.awt.Color(102, 102, 255))); // NOI18N
        jPanel4.setOpaque(false);

        cboDoAn.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Món khai vị", "Món chính", "Món tráng miệng" }));
        cboDoAn.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        cboDoAn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboDoAnItemStateChanged(evt);
            }
        });
        cboDoAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDoAnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(cboDoAn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cboDoAn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout myPanelShadow1Layout = new javax.swing.GroupLayout(myPanelShadow1);
        myPanelShadow1.setLayout(myPanelShadow1Layout);
        myPanelShadow1Layout.setHorizontalGroup(
            myPanelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanelShadow1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(100, 100, 100)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );
        myPanelShadow1Layout.setVerticalGroup(
            myPanelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanelShadow1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(myPanelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(myPanelShadow1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(myPanelShadow1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tas, javax.swing.GroupLayout.PREFERRED_SIZE, 452, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed

    }//GEN-LAST:event_btnADDActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        txtmaMonAn.setEnabled(true);
        txtmaMonAn.setText("");
        clear();
    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed


    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnFristActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFristActionPerformed

        this.frist();
    }//GEN-LAST:event_btnFristActionPerformed

    private void btnPrveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrveActionPerformed
        this.prve();
    }//GEN-LAST:event_btnPrveActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        this.next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        this.last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void cboMonAnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMonAnItemStateChanged
        FillComBoboxThucDon();
        FillComBoboxLoaiThucAn();
    }//GEN-LAST:event_cboMonAnItemStateChanged

    private void cboDoAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDoAnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboDoAnActionPerformed

    private void cboDoAnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDoAnItemStateChanged
        fillCickMonAn();
        FillComBoboxLoaiThucAn();
    }//GEN-LAST:event_cboDoAnItemStateChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        this.Search();

    }//GEN-LAST:event_btnSearchActionPerformed

    private void cboLoaiMonAnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLoaiMonAnItemStateChanged

    }//GEN-LAST:event_cboLoaiMonAnItemStateChanged

    private void rdoThucAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoThucAnActionPerformed
        FillComBoboxLoaiThucAn2("Thức ăn");
    }//GEN-LAST:event_rdoThucAnActionPerformed

    private void rdoDoUongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDoUongActionPerformed
        FillComBoboxLoaiThucAn2("Thức uống");
    }//GEN-LAST:event_rdoDoUongActionPerformed

    private void cboMonAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMonAnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboMonAnActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        this.Search();
    }//GEN-LAST:event_txtSearchKeyReleased

    private void tblDanhSachThucDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachThucDonMouseClicked

    }//GEN-LAST:event_tblDanhSachThucDonMouseClicked

    private void txtgiaGocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtgiaGocMouseClicked

        String tien = txtgiaGoc.getText();
        txtgiaGoc.setText(tien.replace("VNĐ", "").trim());

    }//GEN-LAST:event_txtgiaGocMouseClicked

    private void txtbanGiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtbanGiaMouseClicked
        String tien = txtbanGia.getText();
        txtgiaGoc.setText(tien.replace("VNĐ", "").trim());
    }//GEN-LAST:event_txtbanGiaMouseClicked

    private void lblAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnhMouseClicked
        ChooseImage();
    }//GEN-LAST:event_lblAnhMouseClicked

    private void init() {
        this.fillTable();
        this.fillComboBoxMonAn();
        this.FillComBoboxThucDon();
        this.fillCickMonAn();
        this.clickTableDA();
        this.clickTableDU();

        this.FillComBoboxLoaiThucAn();
        rdoThucAn.setSelected(true);
        clear();

    }

    private void fillTable() {
        // Set cột đồ ăn
        model.setColumnCount(0);
        this.addColumn("Stt", "Mã món ăn", "Tên món ăn", "Giá món ăn", "Giá gốc", "Tình trạng", "Loại đồ ăn", "Img");

        // Set dòng đồ ăn
        model.setRowCount(0);
        int ID = 1;
        try {
            List<DoAn> list = daoDA.selectAll();// lưu cái cở sở dự liệu về ái list mà ở trong nhân viên

            for (DoAn entity : list) {

                String tt = "";
                if (entity.isTinhTrang() == true) {
                    tt = "Còn bán";
                } else {
                    tt = "Ngừng bán";
                }
                model.addRow(new Object[]{
                    ID++, entity.getMaDoAn(), entity.getTenDoAn(), Format_Money.formatMoney(entity.getGiaDoAn()),
                    Format_Money.formatMoney(entity.getGiaGoc()), tt, entity.getMaLoaiThucDon(),
                    entity.getImg()
                });
                Integer maDoAn = Integer.parseInt(entity.getMaDoAn().replace("DA-", "").trim());
                listDA.add(maDoAn);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            List<DoUong> list = daoDU.selectAll();// lưu cái cở sở dự liệu về ái list mà ở trong nhân viên

            for (DoUong entity : list) {
                String tt = "";
                if (entity.isTinhTrang() == true) {
                    tt = "Còn bán";
                } else {
                    tt = "Ngừng bán";
                }
                model.addRow(new Object[]{
                    ID++, entity.getMaDoUong(), entity.getTenDoUong(), Format_Money.formatMoney(entity.getGiaDoUong()),
                    Format_Money.formatMoney(entity.getGiaGoc()), tt, entity.getMaLoaiThucDon(),
                    entity.getImg()
                });
                Integer maDoAn = Integer.parseInt(entity.getMaDoUong().replace("DU-", "").replace("Du-", "").trim());
                listDU.add(maDoAn);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        tblDanhSachThucDon.getTbl().setModel(model);

    }

    private void addColumn(String... nameColumn) {
        model.setColumnCount(0);
        for (int i = 0; i < nameColumn.length; i++) {
            model.addColumn(nameColumn[i]);
        }
    }

    private void fillComboBoxMonAn() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboMonAn.getModel();
        model.removeAllElements();
        model.addElement("Thức ăn");
        model.addElement("Thức uống");
    }

    private void FillComBoboxThucDon() {
        LoaiThucDonDAO daoAU = new LoaiThucDonDAO();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboDoAn.getModel();
        model.removeAllElements();
        if (cboMonAn.getSelectedItem() != null) {
            String keyWord = cboMonAn.getSelectedItem().toString().trim();
            List<LoaiThucDon> list = daoAU.selectByThuocLoai(keyWord);
            if (list == null) {
                return;
            }
            for (LoaiThucDon item : list) {
                model.addElement(item);
            }
        }
    }

    private void FillComBoboxLoaiThucAn() {
        LoaiThucDonDAO daoAU = new LoaiThucDonDAO();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiMonAn.getModel();
        model.removeAllElements();
        if (cboMonAn.getSelectedItem() != null) {

            String keyWord = cboMonAn.getSelectedItem().toString().trim();
            List<LoaiThucDon> list = daoAU.selectByThuocLoai(keyWord);
            if (list == null) {
                return;
            }
            for (LoaiThucDon item : list) {
                model.addElement(item);
            }

        }
    }

    private void FillComBoboxLoaiThucAn2(String key) {
        LoaiThucDonDAO daoAU = new LoaiThucDonDAO();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiMonAn.getModel();
        model.removeAllElements();
        List<LoaiThucDon> list = daoAU.selectByThuocLoai(key);
        if (list == null) {
            return;
        }
        for (LoaiThucDon item : list) {
            model.addElement(item);
        }
        setIDAuto(rdoThucAn.isSelected());
    }

    private void fillCickMonAn() {
        if (cboDoAn.getModel().getSelectedItem() != null) {

            // lấy mã của loại thưc đơn để lọc dữ liệu cho bảng. vd: MC
            LoaiThucDon key2 = (LoaiThucDon) cboDoAn.getModel().getSelectedItem();

            if (key2.getThuocLoai().contains("uống")) {
                model.setRowCount(0);
                ID = 1;
                List<DoUong> list = daoDU.selectByMaLoaiThucDonUong(key2.getMaLoaiThucDon());
                if (list != null) {
                    for (DoUong entity : list) {
                        String tt = "";
                        if (entity.isTinhTrang() == true) {
                            tt = "Còn bán";
                        } else {
                            tt = "Ngừng bán";
                        }
                        model.addRow(new Object[]{
                            ID++, entity.getMaDoUong(), entity.getTenDoUong(), Format_Money.formatMoney(entity.getGiaDoUong()),
                            Format_Money.formatMoney(entity.getGiaGoc()), tt, entity.getMaLoaiThucDon(),
                            entity.getImg()
                        });
                    }
                }
            } else {
                model.setRowCount(0);
                ID = 1;
                List<DoAn> list = daoDA.selectByMaLoaiThucDonAn(key2.getMaLoaiThucDon());
                if (list != null) {
                    for (DoAn entity : list) {
                        String tt = "";
                        if (entity.isTinhTrang() == true) {
                            tt = "Còn bán";
                        } else {
                            tt = "Ngừng bán";
                        }
                        model.addRow(new Object[]{
                            ID++, entity.getMaDoAn(), entity.getTenDoAn(), Format_Money.formatMoney(entity.getGiaDoAn()),
                            Format_Money.formatMoney(entity.getGiaGoc()), tt, entity.getMaLoaiThucDon(),
                            entity.getImg()
                        });
                    }
                }

            }

            tblDanhSachThucDon.getTbl().setModel(model);
        }

    }

    private void ClickDoubleTable() {

        if (me != null) {
            if (me.getClickCount() == 2) {
                tblDanhSachThucDon.setEnabled(false);

                row = tblDanhSachThucDon.getTbl().getSelectedRow();
                String maNH = (String) tblDanhSachThucDon.getTbl().getValueAt(this.row, 0);
//            System.out.println(maNH);
                DoAn nh = daoDA.selectByID(maNH);
                try {
                    this.setFormDA(nh);
                    tas.setSelectedIndex(0);
                    this.updateStatus();
                } catch (ParseException ex) {
                    Logger.getLogger(QuanLyThucDon.class.getName()).log(Level.SEVERE, null, ex);
                }
            }      //
        }
    }

    private void Search() {
        int ID = 1;
        String keyword = txtSearch.getText();
//        if(keyword.equals("")){
//            MsgBox.alert(this, "Vui lòng nhập từ cần tìm");
//            txtSearch.requestFocus();
//            return ;  
//        }

        if (cboMonAn.getSelectedItem().toString().equalsIgnoreCase("Thức ăn")) {
            model.setRowCount(0);
            try {

                List<DoAn> list = daoDA.selectByTenDoAn(keyword);
                if (list != null) {
                    for (DoAn entity : list) {
                        String tt = "";
                        if (entity.isTinhTrang() == true) {
                            tt = "Còn bán";
                        } else {
                            tt = "Ngừng bán";
                        }
                        model.addRow(new Object[]{
                            ID++, entity.getMaDoAn(), entity.getTenDoAn(), Format_Money.formatMoney(entity.getGiaDoAn()),
                            Format_Money.formatMoney(entity.getGiaGoc()), tt, entity.getMaLoaiThucDon(),
                            entity.getImg()
                        });

                    }
                }

            } catch (Exception e) {
                e.printStackTrace();

            }
        } else if (cboMonAn.getSelectedItem().toString().equalsIgnoreCase("Thức uống")) {
            model.setRowCount(0);
            try {

                List<DoUong> list = daoDU.selectByIDTenDoUong(keyword);
                if (list != null) {
                    for (DoUong entity : list) {
                        String tt = "";
                        if (entity.isTinhTrang() == true) {
                            tt = "Còn bán";
                        } else {
                            tt = "Ngừng bán";
                        }
                        model.addRow(new Object[]{
                            ID++, entity.getMaDoUong(), entity.getTenDoUong(), Format_Money.formatMoney(entity.getGiaDoUong()),
                            Format_Money.formatMoney(entity.getGiaGoc()), tt, entity.getMaLoaiThucDon(),
                            entity.getImg()

                        });
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
            //

        } else {
            MsgBox.alert(this, " không tìm thấy");
        }
        tblDanhSachThucDon.getTbl().setModel(model);

    }

    private void clickTableDA() { // ham lay du lieu len form
        try {

            tblDanhSachThucDon.getTbl().addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    btnUpdate.setEnabled(true);
                    btnDelete.setEnabled(true);
                    QuanLyThucDon.row = tblDanhSachThucDon.getTbl().getSelectedRow();
                    editDA();

                }

            });

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //
    private void clickTableDU() { // ham lay du lieu len form
        try {

            tblDanhSachThucDon.getTbl().addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    btnUpdate.setEnabled(true);
                    btnDelete.setEnabled(true);
                    QuanLyThucDon.row = tblDanhSachThucDon.getTbl().getSelectedRow();
                    editDU();

                }

            });

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // hàm để set giử liệu vào hoặc hiện thị lên form
    private void setFormDA(DoAn model) throws ParseException {

        txtmaMonAn.setText(model.getMaDoAn());
        txtTenMon.setText(model.getTenDoAn());
        txtgiaGoc.setText(FormatMoney.formatMoney(model.getGiaGoc()));
        txtbanGia.setText(FormatMoney.formatMoney(model.getGiaDoAn()));
        if (model.isTinhTrang() == true) {
            rdoConBan.setSelected(true);
        } else {
            rdoNgungBan.setSelected(true);
        }

        if (model.getMaLoaiThucDon().equalsIgnoreCase("MKV")) {
            cboLoaiMonAn.setSelectedItem("Món khai vị");
        } else if (model.getMaLoaiThucDon().equalsIgnoreCase("MC")) {
            cboLoaiMonAn.setSelectedItem("Món chínḥ");
        } else {
            cboLoaiMonAn.setSelectedItem("Món tráng miệng");
        }

        // hình ảnh
        try {
            if (model.getImg() == null || model.getImg().isEmpty()) {
                model.setImg("AnhDoAn.png");
                File file = new File("DoAnVaDoUong//AnhMacDinh");
                lblAnh.setToolTipText(model.getImg());
                lblAnh.setIcon(XImage.readNotPath(file.getAbsolutePath(), model.getImg(), true));
            } else {
                File file;
                if (model.getMaLoaiThucDon().equalsIgnoreCase("MKV")) {
                    file = new File("DoAnVaDoUong//AnhDoAn/KhaiVi//");
                } else if (model.getMaLoaiThucDon().equalsIgnoreCase("MC")) {
                    file = new File("DoAnVaDoUong//AnhDoAn/MonChinh//");
                } else {

                    file = new File("DoAnVaDoUong//AnhDoAn/MonTrangMieng//");
                }
                lblAnh.setToolTipText(model.getImg());
                lblAnh.setIcon(XImage.readNotPath(file.getAbsolutePath(), model.getImg(), true));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    //

    private void setFormDU(DoUong model) throws ParseException {

        txtmaMonAn.setText(model.getMaDoUong());
        txtTenMon.setText(model.getTenDoUong());
        txtgiaGoc.setText(FormatMoney.formatMoney(model.getGiaGoc()));
        txtbanGia.setText(FormatMoney.formatMoney(model.getGiaDoUong()));
        rdoThucAn.setSelected(false);
        rdoDoUong.setSelected(true);
        cboLoaiMonAn.setSelectedItem(cboDoAn.getSelectedItem());
        if (model.isTinhTrang() == true) {
            rdoConBan.setSelected(true);
        } else {
            rdoNgungBan.setSelected(true);
        }
        
        if (model.getMaLoaiThucDon().equalsIgnoreCase("DUCG")) {
            cboLoaiMonAn.setSelectedItem("Đồ uống có ga");
        } else {
            cboLoaiMonAn.setSelectedItem("Đồ uống khác");
        }
        
        try {
            if (model.getImg() == null || model.getImg().isEmpty()) {
                model.setImg("AnhDoUong.png");
                File file = new File("DoAnVaDoUong//AnhMacDinh");
                lblAnh.setToolTipText(model.getImg());
                lblAnh.setIcon(XImage.readNotPath(file.getAbsolutePath(), model.getImg(), true));
            } else {
                File file;
                if (model.getMaLoaiThucDon().equalsIgnoreCase("DUCC")) {
                    file = new File("DoAnVaDoUong//AnhDoUong/DoUongCoCon//");
                } else {
                    file = new File("DoAnVaDoUong//AnhDoUong/DoUongKhac//");
                }
                lblAnh.setToolTipText(model.getImg());
                lblAnh.setIcon(XImage.readNotPath(file.getAbsolutePath(), model.getImg(), true));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void editDA() {//hiện thị dữ liệu từ danh sách sang cập nhật

        try {
            String maDA = (String) tblDanhSachThucDon.getTbl().getValueAt(row, 1);
            DoAn model = daoDA.selectByID(maDA);
            if (model != null) {
                this.setFormDA(model);
                this.updateStatus();
            }
        } catch (ParseException e) {
            e.printStackTrace();
        }

    }

    private void editDU() {
        //hiện thị dữ liệu từ danh sách sang cập nhật
        try {
            String maDU = (String) tblDanhSachThucDon.getTbl().getValueAt(row, 1);
            DoUong model = daoDU.selectByID(maDU);
            if (model != null) {
                this.setFormDU(model);
                this.updateStatus();
            }
        } catch (ParseException e) {
            e.printStackTrace();
        }

    }

    // hàm xóa sạch form
    private void clear() {
        btnADD.setEnabled(true);
        btnDelete.setEnabled(false);
        btnLoad.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnLast.setEnabled(false);
        btnPrve.setEnabled(false);
        btnNext.setEnabled(false);
        btnFrist.setEnabled(false);

        txtTenMon.setText("");
        txtbanGia.setText("");
        txtgiaGoc.setText("");

        txtGhiChu.getTextArea1().setText("");
        rdoThucAn.setSelected(true);
        rdoDoUong.setSelected(false);
        rdoConBan.setSelected(false);
        rdoNgungBan.setSelected(true);

//        cboLoaiMonAn.setSelectedIndex(0);;
        lblAnh.setText(null);
        lblAnh.setIcon(null);

        setIDAuto(rdoThucAn.isSelected());
    }

    private boolean validation() {
        if (txtmaMonAn.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin mã Món ăn");
            txtmaMonAn.requestFocus();
            return false;
        } else if (txtTenMon.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin tên món ăn");
            txtTenMon.requestFocus();
            return false;
        } else if (txtgiaGoc.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập giá gốc");
            txtgiaGoc.requestFocus();
            return false;
        } else if (txtbanGia.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập giá bán");
            txtbanGia.requestFocus();
            return false;
        }

//        if (MsgBox.confirm(this, "Bạn muốn lưu thông tin với ảnh mặc định ?")) {
//            try {
//                // tạo đối tượng để gọi đến
//                DoAn da = new DoAn();
//                DoAn model = getFormDA(da);
////                    ns.setImg("ANh11.png");
//                daoDA.insert(model);
//                this.fillTable();
//                //this.clear();
//                System.out.println("Insert thành công");
//            } catch (ParseException ex) {
//                //Logger.getLogger(QuanLyNhanSu.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
        return true;
    }

    // ham lay du lieu len form
    public DoAn getFormDA(DoAn model) throws ParseException {

        model.setMaDoAn(txtmaMonAn.getText());
        model.setTenDoAn(txtTenMon.getText());
        //   System.out.println(txtTenMon.getText());
        model.setGiaDoAn(Double.parseDouble(txtbanGia.getText().replace("VNĐ", "").replace(",", "").trim()));
        model.setGiaGoc(Double.parseDouble(txtgiaGoc.getText().replace("VNĐ", "").replace(",", "").trim()));
        LoaiThucDon maLoai = (LoaiThucDon) cboLoaiMonAn.getModel().getSelectedItem();
        model.setMaLoaiThucDon(maLoai.getMaLoaiThucDon());

//        if (lblAnh.getToolTipText() == null) {
//            lblAnh.setToolTipText("AnhDoAn.png");
//        }
        model.setImg(lblAnh.getToolTipText());
//       
        if (rdoConBan.isSelected()) {
            model.setTinhTrang(true);
        } else {
            model.setTinhTrang(false);
        }
        // model.setMaNV(Auth.user.getMaNV());          
        return model;
    }

    public DoUong getFormDU(DoUong model) throws ParseException {
        model.setMaDoUong(txtmaMonAn.getText());
        model.setTenDoUong(txtTenMon.getText());
        model.setGiaDoUong(Double.parseDouble(txtbanGia.getText().replace("VNĐ", "").replace(",", "").trim()));
        model.setGiaGoc(Double.parseDouble(txtgiaGoc.getText().replace("VNĐ", "").replace(",", "").trim()));
        LoaiThucDon maLoai = (LoaiThucDon) cboLoaiMonAn.getModel().getSelectedItem();
        model.setMaLoaiThucDon(maLoai.getMaLoaiThucDon());
//       

        model.setImg(lblAnh.getToolTipText());
//       
        if (rdoConBan.isSelected()) {
            model.setTinhTrang(true);
        } else {
            model.setTinhTrang(false);
        }
        // model.setMaNV(Auth.user.getMaNV());          
        return model;
    }
// hàm lấy dữ liệu getForm:

    private void ChooseImage() {
        JFileChooser fileChooser = new JFileChooser();// tạo đối tượng tử hộp thoại
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {// nếu hợp thoại hiện lên có chọn
            File file = fileChooser.getSelectedFile();// tạo file và lấy đường dẫn        
            ImageIcon icon = null;

            try {
                if (rdoThucAn.isSelected()) {
                    if (cboLoaiMonAn.getSelectedItem().toString().contains("vị")) {
                        XImage.save("DoAnVaDoUong//AnhDoAn/KhaiVi//", file);// save file vao thư mục logo
                        File f = new File("DoAnVaDoUong//AnhDoAn/KhaiVi//");
                        icon = XImage.readNotPath(f.getAbsolutePath(), file.getName(), true);
                    } else if (cboLoaiMonAn.getSelectedItem().toString().contains("chính")) {
                        XImage.save("DoAnVaDoUong//AnhDoAn/MonChinh//", file);// save file vao thư mục logo
                        File f = new File("DoAnVaDoUong//AnhDoAn/MonChinh//");
                        icon = XImage.readNotPath(f.getAbsolutePath(), file.getName(), true);
                    } else {
                        XImage.save("DoAnVaDoUong//AnhDoAn/MonTrangMieng//", file);// save file vao thư mục logo
                        File f = new File("DoAnVaDoUong//AnhDoAn/MonTrangMieng//");
                        icon = XImage.readNotPath(f.getAbsolutePath(), file.getName(), true);
                    }

                } else {
                    if (cboLoaiMonAn.getSelectedItem().toString().contains("có")) {
                        XImage.save("DoAnVaDoUong//AnhDoUong/DoUongCoCon//", file);// save file vao thư mục logo
                        File f = new File("DoAnVaDoUong//AnhDoUong/DoUongCoCon//");
                        icon = XImage.readNotPath(f.getAbsolutePath(), file.getName(), true);
                    } else {
                        XImage.save("DoAnVaDoUong//AnhDoUong/DoUongKhac//", file);// save file vao thư mục logo
                        File f = new File("DoAnVaDoUong//AnhDoUong/DoUongKhac//");
                        icon = XImage.readNotPath(f.getAbsolutePath(), file.getName(), true);
                    }
                }

                lblAnh.setIcon(icon);
                lblAnh.setToolTipText(file.getName());

            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }

    public void insertDA() throws ParseException {

        try {
            if (validation()) {
                DoAn da = new DoAn();
                DoAn model = getFormDA(da);
                DoAn test = daoDA.selectByID(model);
                if (test == null) {
                    if (MsgBox.confirm(this, "Bạn có chắc chắn muốn thêm món ăn mới ?")) {
                        daoDA.insert(model);
                        this.fillTable();
                        this.clear();
                        MsgBox.alert(this, "Thêm mới thành công!");
                    }
                } else {
                    MsgBox.alert(this, "Mã đồ ăn đã tồn tại!");
                }
            }
        } catch (NumberFormatException e) {
            MsgBox.alert(this, "Sai dịnh dạng tiền!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    //
    public void insertDU() throws ParseException {
        try {
            if (validation()) {
                DoUong du = new DoUong();
                DoUong model = getFormDU(du);
                DoUong test = daoDU.selectByID(model);
                //  System.out.println(daoDA.selectByID(model));
                if (test == null) {
                    if (MsgBox.confirm(this, "Bạn có chắc chắn muốn thêm nhân viên mới ?")) {
                        daoDU.insert(model);
                        this.fillTable();
                        this.clear();
                        //  tas.setSelectedIndex(0);
                        MsgBox.alert(this, "Thêm mới thành công!");
                    }
                }
            }
        } catch (NumberFormatException e) {
            MsgBox.alert(this, "Sai dịnh dạng tiền!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // phước thức dùng để xóa code
    public void deleteDA() {
        try {
//           
            String maDA = (String) tblDanhSachThucDon.getTbl().getValueAt(row, 1);
            DoAn da = new DoAn();
            if (MsgBox.confirm(this, "Bạn có chắc chắn muốn ngừng bán Đồ ăn không ?")) {
                daoDA.delete(maDA);
                this.fillTable();
                rdoNgungBan.setSelected(true);
                MsgBox.alert(this, "Đồ ăn đã ngừng bán!");
            }
        } catch (HeadlessException e) {
            MsgBox.alert(this, " thất bại!");
        }
    }

    public void deleteDU() {
        try {
            String maDU = (String) tblDanhSachThucDon.getTbl().getValueAt(row, 1);
            DoUong du = new DoUong();
            if (MsgBox.confirm(this, "Bạn có chắc chắn muốn ngừng bán Đồ uống không ?")) {
                daoDU.delete(maDU);
                this.fillTable();
                rdoNgungBan.setSelected(true);
                MsgBox.alert(this, "Đồ uống đã ngừng báng!");
            }

        } catch (HeadlessException e) {
            MsgBox.alert(this, " thất bại!");
        }
    }
    //

    public void updateDA() {
        txtmaMonAn.setEnabled(false);
        try {
            if (validation()) {
                DoAn model = new DoAn();
                this.getFormDA(model);
                if (MsgBox.confirm(this, "Bạn có chắc chắn muốn cập nhật thông tin?")) {
                    daoDA.update(model);
                    this.fillTable();
                    MsgBox.alert(this, "Cập nhật thành công!");
                }
            }
        } catch (ParseException e) {
            //  System.out.println(e);
            MsgBox.alert(this, "Cập nhật thất bại!");
        }
    }
    //

    public void updateDU() {
        txtmaMonAn.setEnabled(false);
        try {
            if (validation()) {
                DoUong model = new DoUong();
                this.getFormDU(model);
                if (MsgBox.confirm(this, "Bạn có chắc chắn muốn cập nhật thông tin?")) {
                    daoDU.update(model);
                    this.fillTable();
                    MsgBox.alert(this, "Cập nhật thành công!");
                }
            }
        } catch (ParseException e) {
            MsgBox.alert(this, "Cập nhật thất bại!");
        }
    }

    public void frist() {

        if (rdoThucAn.isSelected()) {
            this.row = 0;
            this.editDA();

        } else {
            this.row = 0;
            this.editDU();
        }

    }

    public void prve() {

        if (rdoThucAn.isSelected()) {
            if (this.row > 0) {
                this.row--;
                this.editDA();
            }

        } else {
            if (this.row > 0) {
                this.row--;
                this.editDU();
            }
        }

    }

    public void next() {
        if (rdoThucAn.isSelected()) {

            if (this.row < tblDanhSachThucDon.getTbl().getRowCount() - 1) {
                this.row++;
                this.editDA();
            }

        } else {

            if (this.row < tblDanhSachThucDon.getTbl().getRowCount() - 1) {
                this.row++;
                this.editDU();
            }
        }

    }

//
    public void last() {
        if (rdoThucAn.isSelected()) {
            this.row = tblDanhSachThucDon.getTbl().getRowCount() - 1;
            this.editDA();
        } else {

            this.row = tblDanhSachThucDon.getTbl().getRowCount() - 1;
            this.editDU();
        }

    }

    public void updateStatus() {
        boolean edit = this.row >= 0;
        boolean frist = this.row == 0;
        boolean last = (this.row == tblDanhSachThucDon.getTbl().getRowCount() - 1);

        btnFrist.setEnabled(edit && !frist);
        btnPrve.setEnabled(edit && !frist);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
    }

    public void addEvent(String nameEvent, ActionListener event) {
        if (nameEvent.contains("thêm")) {
            btnADD.addActionListener(event);
        } else if (nameEvent.contains("sửa")) {
            btnUpdate.addActionListener(event);
        } else if (nameEvent.contains("xóa")) {
            btnDelete.addActionListener(event);
        }
    }

    public void setIDAuto(boolean radio) {
        if (radio == true) {
            if (listDA != null) {
                for (int i = 1; i < listDA.size() + 2; i++) {
                    if (listDA.contains(i) == false) {
                        txtmaMonAn.setText("DA-00" + i);
                        if (i > 9) {
                            txtmaMonAn.setText("DA-0" + i);
                        }
                        break;
                    }
                }
            }
        } else if (radio == false) {
            if (listDU != null) {
                for (int i = 1; i < listDU.size() + 2; i++) {
                    if (listDU.contains(i) == false) {
                        txtmaMonAn.setText("DU-00" + i);
                        if (i > 9) {
                            txtmaMonAn.setText("DU-0" + i);
                        }
                        break;
                    }
                }
            }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgLoaiMonAn;
    private javax.swing.ButtonGroup btgTinhTrang;
    private com.system.customSwing.Designed.MyButton_01 btnADD;
    private com.system.customSwing.Designed.MyButton_01 btnDelete;
    private com.system.customSwing.Designed.MyButton_01 btnFrist;
    private com.system.customSwing.Designed.MyButton_01 btnLast;
    private com.system.customSwing.Designed.MyButton_01 btnLoad;
    private com.system.customSwing.Designed.MyButton_01 btnNext;
    private com.system.customSwing.Designed.MyButton_01 btnPrve;
    private com.system.customSwing.Designed.MyButton_02 btnSearch;
    private com.system.customSwing.Designed.MyButton_01 btnUpdate;
    private com.system.customSwing.Designed.MyComboBox cboDoAn;
    private com.system.customSwing.Designed.MyComboBox cboLoaiMonAn;
    private com.system.customSwing.Designed.MyComboBox cboMonAn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel lblAnh;
    private com.system.customSwing.Designed.MyPanel myPanel1;
    private com.system.customSwing.Designed.MyPanelShadow myPanelShadow1;
    private com.system.customSwing.Designed.MyRadioButton rdoConBan;
    private com.system.customSwing.Designed.MyRadioButton rdoDoUong;
    private com.system.customSwing.Designed.MyRadioButton rdoNgungBan;
    private com.system.customSwing.Designed.MyRadioButton rdoThucAn;
    private com.system.customSwing.Designed.MyTabbedPane tas;
    private com.system.customSwing.Designed.MyTable tblDanhSachThucDon;
    private com.system.customSwing.Designed.MyTextArea txtGhiChu;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtSearch;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtTenMon;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtbanGia;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtgiaGoc;
    private com.system.customSwing.TextField_01.TextFieldSuggestion txtmaMonAn;
    // End of variables declaration//GEN-END:variables
}
