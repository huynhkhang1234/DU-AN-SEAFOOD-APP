/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.system.main;

import java.awt.Color;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.mail.AuthenticationFailedException;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import com.system.DAO.ChucVuDAO;
import com.system.DAO.NhanSuDAO;
import com.system.DAO.TaiKhoanDAO;
import com.system.inventorysoftware.LogIn.FinalValue;
import com.system.inventorysoftware.LogIn.LoadData;
import com.system.model.code.ChucVu;
import com.system.model.code.NhanSu;
import com.system.model.code.TaiKhoan;
import com.system.utils.MsgBox;

/**
 *
 * @author Yaseen Ameer
 */
public class QuenMatKhau extends javax.swing.JFrame {

    String regexEmail = "/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/";
    String DataName = "";
    String DataPass = "";
    String NameCV = "";
    private LoadData pnlLoading;

    public QuenMatKhau(String name) {
        initComponents();
        init(name);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel_SoftZyd = new javax.swing.JLabel();
        jLabel_inven = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        txtEmailChange = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        btnDoiPass = new poly.edu.util.ButtonBadges();
        txtEmailChanePass = new javax.swing.JPasswordField();
        txtPassNew = new javax.swing.JPasswordField();
        txtPassConfirm = new javax.swing.JPasswordField();
        txtGmail = new poly.edu.util.TextField();
        btnGuiGmail = new poly.edu.util.ButtonBadges();
        jButton15 = new javax.swing.JButton();
        jLabel_inven2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(169, 224, 49));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(53, 147, 201));
        jButton1.setText("Đổi mật khẩu >>");
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jButton1.setRequestFocusEnabled(false);
        jButton1.setVerifyInputWhenFocusTarget(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 580, 140, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_userShield.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, -1, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_twitter.png"))); // NOI18N
        jButton2.setToolTipText("Twitter");
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, 28));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_facebook.png"))); // NOI18N
        jButton3.setToolTipText("Facebook");
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 11, -1, 28));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_instagram.png"))); // NOI18N
        jButton4.setToolTipText("Instagram");
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 11, -1, 28));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_gmail.png"))); // NOI18N
        jButton5.setToolTipText("Email");
        jButton5.setBorder(null);
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 11, -1, 28));

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_youtube.png"))); // NOI18N
        jButton6.setToolTipText("YouTube");
        jButton6.setBorder(null);
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 11, -1, 28));

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(169, 224, 49));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_userMale.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, 45));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 51, 51));
        jLabel19.setText("Email");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 70, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 172, 150, 0));

        jPanel3.setBackground(new java.awt.Color(61, 168, 229));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_cancel.png"))); // NOI18N
        jButton10.setToolTipText("Close");
        jButton10.setBorder(null);
        jButton10.setBorderPainted(false);
        jButton10.setContentAreaFilled(false);
        jButton10.setRequestFocusEnabled(false);
        jButton10.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_cancelFocus.png"))); // NOI18N
        jButton10.setVerifyInputWhenFocusTarget(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 40, 40));

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_minus.png"))); // NOI18N
        jButton11.setToolTipText("Minimize");
        jButton11.setBorder(null);
        jButton11.setBorderPainted(false);
        jButton11.setContentAreaFilled(false);
        jButton11.setFocusPainted(false);
        jButton11.setRequestFocusEnabled(false);
        jButton11.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_minusFocus.png"))); // NOI18N
        jButton11.setVerifyInputWhenFocusTarget(false);
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, 40, 40));

        jLabel_SoftZyd.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        jLabel_SoftZyd.setForeground(new java.awt.Color(242, 242, 242));
        jLabel_SoftZyd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_logo2.png"))); // NOI18N
        jLabel_SoftZyd.setText("ZYD Soft");
        jPanel3.add(jLabel_SoftZyd, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 220, 310, 80));

        jLabel_inven.setFont(new java.awt.Font("Trebuchet MS", 0, 36)); // NOI18N
        jLabel_inven.setForeground(new java.awt.Color(242, 242, 242));
        jLabel_inven.setText("Inventory Management");
        jPanel3.add(jLabel_inven, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 370, 50));

        jPanel6.setBackground(new java.awt.Color(61, 168, 229));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEmailChange.setBackground(new java.awt.Color(69, 128, 173));
        txtEmailChange.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        txtEmailChange.setForeground(new java.awt.Color(255, 255, 255));
        txtEmailChange.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(169, 224, 49)));
        txtEmailChange.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                txtEmailChangeMouseMoved(evt);
            }
        });
        txtEmailChange.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailChangeFocusLost(evt);
            }
        });
        jPanel6.add(txtEmailChange, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 330, 40));

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(242, 242, 242));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_logo.png"))); // NOI18N
        jLabel13.setText("ZYD Soft");
        jPanel6.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 310, -1));

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(242, 242, 242));
        jLabel12.setText(" Inventory Management");
        jPanel6.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 190, -1));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(242, 242, 242));
        jLabel14.setText("Tên đăng nhập");
        jPanel6.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 90, 20));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(242, 242, 242));
        jLabel18.setText("Mật khẩu mới");
        jPanel6.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 314, -1));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(242, 242, 242));
        jLabel17.setText("Xác nhận mật khẩu mới");
        jPanel6.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 314, -1));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(242, 242, 242));
        jLabel16.setText("Mật khẩu");
        jPanel6.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 314, -1));

        jButton14.setBackground(new java.awt.Color(169, 224, 49));
        jButton14.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jButton14.setForeground(new java.awt.Color(242, 242, 242));
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_backTo2.png"))); // NOI18N
        jButton14.setText("Đóng");
        jButton14.setBorder(null);
        jButton14.setContentAreaFilled(false);
        jButton14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton14.setRequestFocusEnabled(false);
        jButton14.setVerifyInputWhenFocusTarget(false);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 510, 110, -1));

        btnDoiPass.setBackground(new java.awt.Color(81, 149, 201));
        btnDoiPass.setForeground(new java.awt.Color(255, 255, 255));
        btnDoiPass.setText("Đổi mật khẩu");
        btnDoiPass.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDoiPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiPassActionPerformed(evt);
            }
        });
        jPanel6.add(btnDoiPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, 330, 40));

        txtEmailChanePass.setBackground(new java.awt.Color(69, 128, 173));
        txtEmailChanePass.setForeground(new java.awt.Color(255, 255, 255));
        txtEmailChanePass.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(169, 224, 49)));
        jPanel6.add(txtEmailChanePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 250, 330, 40));

        txtPassNew.setBackground(new java.awt.Color(69, 128, 173));
        txtPassNew.setForeground(new java.awt.Color(255, 255, 255));
        txtPassNew.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(169, 224, 49)));
        jPanel6.add(txtPassNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 320, 330, 40));

        txtPassConfirm.setBackground(new java.awt.Color(69, 128, 173));
        txtPassConfirm.setForeground(new java.awt.Color(255, 255, 255));
        txtPassConfirm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(169, 224, 49)));
        jPanel6.add(txtPassConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 390, 330, 40));

        jPanel3.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 410, 560));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 0, 450, 620));

        txtGmail.setForeground(new java.awt.Color(51, 51, 51));
        txtGmail.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        txtGmail.setLabelText("");
        txtGmail.setName(""); // NOI18N
        txtGmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGmailFocusLost(evt);
            }
        });
        txtGmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGmailKeyReleased(evt);
            }
        });
        jPanel1.add(txtGmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 260, -1));

        btnGuiGmail.setBackground(new java.awt.Color(81, 149, 201));
        btnGuiGmail.setForeground(new java.awt.Color(255, 255, 255));
        btnGuiGmail.setText("Gửi gmail");
        btnGuiGmail.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnGuiGmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuiGmailActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuiGmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 450, 280, 40));

        jButton15.setBackground(new java.awt.Color(169, 224, 49));
        jButton15.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton15.setForeground(new java.awt.Color(53, 147, 201));
        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icon_backTo.png"))); // NOI18N
        jButton15.setText("Đăng nhập");
        jButton15.setBorder(null);
        jButton15.setContentAreaFilled(false);
        jButton15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton15.setRequestFocusEnabled(false);
        jButton15.setVerifyInputWhenFocusTarget(false);
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton15MouseClicked(evt);
            }
        });
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, 180, -1));

        jLabel_inven2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel_inven2.setForeground(new java.awt.Color(53, 147, 201));
        jLabel_inven2.setText("Thiết lập kết nối khác");
        jPanel1.add(jLabel_inven2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 160, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jLabel_SoftZyd.setVisible(false);
        jLabel_inven.setVisible(false);
        jPanel6.setVisible(true);
        //   txtPassNew.setEditable(false);
        // txtPassConfirm.setEditable(false);
        //txtEmailChange.requestFocus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        jPanel6.setVisible(false);
        jLabel_SoftZyd.setVisible(true);
        jLabel_inven.setVisible(true);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        this.setState(ICONIFIED);
    }//GEN-LAST:event_jButton11MouseClicked

    private void btnGuiGmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuiGmailActionPerformed
        if (validationsGmail()) {
            this.checkMail();
        }

    }//GEN-LAST:event_btnGuiGmailActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtGmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGmailKeyReleased

    }//GEN-LAST:event_txtGmailKeyReleased

    private void txtGmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGmailFocusLost

    }//GEN-LAST:event_txtGmailFocusLost

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        this.LoadingDangNhap();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void txtEmailChangeMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEmailChangeMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailChangeMouseMoved

    private void txtEmailChangeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailChangeFocusLost

    }//GEN-LAST:event_txtEmailChangeFocusLost

    private void btnDoiPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiPassActionPerformed
        if (validationsPassWord()) {
            this.LoadingPassWord();

        }
    }//GEN-LAST:event_btnDoiPassActionPerformed

    private void jButton15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton15MouseClicked

    }//GEN-LAST:event_jButton15MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuenMatKhau("Quên mật khẩu").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private poly.edu.util.ButtonBadges btnDoiPass;
    private poly.edu.util.ButtonBadges btnGuiGmail;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel_SoftZyd;
    private javax.swing.JLabel jLabel_inven;
    private javax.swing.JLabel jLabel_inven2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPasswordField txtEmailChanePass;
    private javax.swing.JTextField txtEmailChange;
    private poly.edu.util.TextField txtGmail;
    private javax.swing.JPasswordField txtPassConfirm;
    private javax.swing.JPasswordField txtPassNew;
    // End of variables declaration//GEN-END:variables

    public void init(String name) {
        
        txtGmail.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);
        jPanel6.setVisible(false);
        txtEmailChange.requestFocus();
        try {
            //UIManager.setLookAndFeel("com.jtattoo.plaf.bernstein.BernsteinLookAndFeel");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        if (name.equalsIgnoreCase("đổi mật khẩu")) {
            jLabel_SoftZyd.setVisible(false);
            jLabel_inven.setVisible(false);
            jPanel6.setVisible(true);
            txtEmailChange.requestFocus();
        }
    }

    private void sendGmail() {
        String from, to, host, subject, content, pass; // Tạo biến cho việc gửi mail  
        from = "pkqnguyen123@gmail.com";
        to = txtGmail.getText();
        host = "localHost";
        subject = "Gửi thông tin mật khẩu tài khoản!!!";
        content = "Email đăng nhập :    " + txtGmail.getText() + "\n" + "Vai trò là:  " + NameCV + "\n---------------------------------------------- \n" + "Tên đăng nhập:  " + DataName + "\nMật khẩu:    " + DataPass;
        Properties p = new Properties();
        p.put("mail.smtp.auth", "true");
        p.put("mail.smtp.starttls.enable", "true");
        p.put("mail.smtp.host", "smtp.gmail.com");
        p.put("mail.smtp.port", "587");

        Session s = Session.getDefaultInstance(p, new javax.mail.Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("Phinvhpc04124@fpt.edu.vn", "PiKayQi...");
            }
        });
        try {
            MimeMessage m = new MimeMessage(s);
            m.setFrom(from);
            m.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
            m.setSubject(subject);
            m.setText(content);
            Transport.send(m);
            MsgBox.alert(this, "Gửi thông tin qua Gmail thành công !");
            this.clearSendGmail();
        } catch (AuthenticationFailedException e) {
            MsgBox.alert(this, "Vui lòng vào gmail và tìm kiếm 'Less secure app access' và bật nó lên để nhận được gmail");
        }catch (MessagingException e) {
            MsgBox.alert(this, "Email đăng nhập hoặc mật khẩu Email không chính xác ?");
        }
    }

    private void checkMail() {
        try {
            String nameGmail = txtGmail.getText();
            NhanSuDAO dao = new NhanSuDAO();
            NhanSu ns = dao.selectCheckGmail(nameGmail);
            if (ns != null) {
                TaiKhoanDAO daotk = new TaiKhoanDAO();
                ChucVuDAO daoCV = new ChucVuDAO();
                TaiKhoan tk = daotk.selectByID(ns.getMaNhanVien());
                ChucVu cv = daoCV.selectByID(ns.getMaChucVu());
                // gan du lieu vao bien
                DataName = tk.getTenDangNhap();
                DataPass = tk.getMatKhau();
                // tìm tên chức vụ:
                NameCV = cv.getTenChucVu();
                this.LoadingDaTa();
            } else {
                MsgBox.alert(this, "Thông tin Gmail chưa chính xác !");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void checkMailAndPass() {

        String nameLogin = txtEmailChange.getText();
        String passLogin = txtEmailChanePass.getText();
        TaiKhoanDAO daoTK = new TaiKhoanDAO();
        TaiKhoan tk = daoTK.selectCheckNameLogin(nameLogin);
        if (tk != null) {
            // gan du lieu vao bien            
            if (!passLogin.equals("")) {
                if (!tk.getMatKhau().equals(txtEmailChanePass.getText())) {
                    MsgBox.alert(this, "Mật khẩu đăng nhập không chính xác ? Vui lòng xác nhận lại ?");
                    txtEmailChanePass.requestFocus();
                } else {// nếu 2 điều kiện ở trên thỏa mãn.                   
                    if (!txtPassNew.getText().equals("")) {
                        if (txtPassNew.getText().equals(txtPassConfirm.getText())) {
                            try {
                                FinalValue.passWord = txtPassConfirm.getText();
                                daoTK.updatePassWord(tk);
                                MsgBox.alert(this, "Đổi mật khẩu thành công");
                                this.clearPass();
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        } else {
                            MsgBox.alert(this, "Mật khẩu xác nhận không chính xác");
                            txtPassConfirm.requestFocus();
                        }
                    }
                }
            }
        } else {
            MsgBox.alert(this, "Thông tin tài khoản chưa chính xác ! Vui lòng thử lại");
        }
    }

    private void clearSendGmail() {
        txtGmail.setText("");
        txtGmail.requestFocus();

    }

    private void clearPass() {
        txtEmailChange.setText("");
        txtEmailChanePass.setText("");
        txtPassNew.setText("");
        txtPassConfirm.setText("");
        txtEmailChange.requestFocus();
    }

    private boolean validationsGmail() {
        if (txtGmail.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin Gmail");
            txtGmail.requestFocus();
            return false;
        } 
        return true;
    }

    private boolean validationsPassWord() {
        if (txtEmailChange.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin tên đăng nhâp");
            txtEmailChange.requestFocus();
            return false;
        } else if (txtEmailChanePass.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin mật khẩu đăng nhập");
            txtEmailChanePass.requestFocus();
            return false;
        }
        if (txtPassNew.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin mật khẩu mới");
            txtPassNew.requestFocus();
            return false;
        } else if (txtPassConfirm.getText().equals("")) {
            MsgBox.alert(this, "Vui lòng nhập thông tin xác nhận mật khẩu mới");
            txtPassConfirm.requestFocus();
            return false;
        }
        return true;
    }

    private void LoadingDaTa() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    pnlLoading = new LoadData();
                    pnlLoading.setVisible(true);
                    Thread.sleep(250);
                    sendGmail();
                    pnlLoading.DisposeLoadData();
                    pnlLoading.setVisible(false);
                } catch (InterruptedException ex) {
                    Logger.getLogger(QuenMatKhau.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }).start();
    }

    //
    private void LoadingPassWord() {
        String nameLogin = txtEmailChange.getText();
        String passLogin = txtEmailChanePass.getText();
        TaiKhoanDAO daoTK = new TaiKhoanDAO();
        TaiKhoan tk = daoTK.selectCheckNameLogin(nameLogin);
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    pnlLoading = new LoadData();
                    pnlLoading.setVisible(true);
                    Thread.sleep(300);
                    checkMailAndPass();
                    pnlLoading.DisposeLoadData();
                    pnlLoading.setVisible(false);
                } catch (InterruptedException ex) {
                    Logger.getLogger(QuenMatKhau.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }).start();
    }//

    private void LoadingDangNhap() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    pnlLoading = new LoadData();
                    pnlLoading.setVisible(true);
                    Thread.sleep(300);
                    new DangNhap().setVisible(true);
                    pnlLoading.DisposeLoadData();
                    pnlLoading.setVisible(false);
                    // đóng fram chính lại
                    Dispose();
                } catch (InterruptedException ex) {
                    Logger.getLogger(QuenMatKhau.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }).start();
    }

    private void Dispose() {
        this.dispose();

    }

}
